{"version":3,"sources":["utils/createStore.js","apis/firebase.js","apis/nuskin.js","hooks/useInitApp.js","components/Loader.js","components/authentication/LoginPage.js","components/authentication/SignupPage.js","components/authentication/ForgetPasswordPage.js","store/appStore.js","components/clients/clientActions.js","components/product/productActions.js","components/AppNavigation.js","components/SearchBox.js","components/clients/ClientsPage.js","utils/generalUtils.js","components/clients/AddClientDialog.js","components/clients/ClientInfoPage.js","components/clients/EditClientDialog.js","components/clients/DeleteClientDialog.js","utils/validator.js","utils/schema.js","components/clients/CreateOrderPage.js","components/product/ProductPage.js","components/inventory/InventoryPage.js","components/inventory/AddInventoryDialog.js","components/reminder/ClientAccordions.js","components/reminder/ReminderPage.js","components/reminder/AddPurchaseDialog.js","components/account/SubscriptionStatus.js","components/account/FAQ.js","components/account/AccountPage.js","components/account/SubscriptionRuleDialog.js","components/App.js","index.js"],"names":["createAction","ref","dispatch","actions","key","action","type","Object","prototype","toString","call","Error","entries","createStore","initState","StateContext","createSelectorContext","DispatchContext","createContext","ActionContext","Provider","children","_initState","useReducer","produce","state","actionRef","useRef","current","value","useState","selector","useContextSelector","useDispatch","useContext","useAction","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Firebase","isInitializing","isLogin","user","uid","email","creationTime","doc","collection","reduce","obj","collectName","isLoading","list","useSubscribeAuthStateChanged","useEffect","isMounted","auth","onAuthStateChanged","a","getIdTokenResult","idTokenResult","metadata","expirationDate","claims","expiration_date","login","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","cred","firestore","set","sendPasswordResetEmail","useSubscribeCollection","collectionName","onSnapshot","snap","docs","map","id","data","forEach","item","error","console","log","message","useCollection","useDocument","documents","s","hasOwnProperty","warn","useIsLoading","collections","name","batch","currentUser","Cached","catalogList","catalogProductList","getCatalogList","length","catalog","header","axios","get","res","catagoryItems","items","categoryNavigationItems","personalCares","find","linkText","filter","categoryId","nutritionalSupplements","concat","getCatalogListByHeader","getProductListByCatalogInfo","url","itemVos","itemId","itemName","price","itemPrice","salePrice","img","absolutePathItemImage","getAllProductList","Promise","all","productListOfEachCataLog","productMap","Map","products","p","Array","from","values","getCatalogProductList","i","productList","NuskinAPI","getHeaderList","getFilteredProductList","cat","product","useInitApp","then","catch","e","useFetchNuskinProductList","history","useHistory","pathname","useLocation","isInitialized","isAuthPanel","includes","push","useLogoutUnauthorizedUser","Loader","open","Backdrop","style","zIndex","CircularProgress","color","getErrorMessage","code","LoginPage","setEmail","setPassword","isLogining","setIsLogining","setError","onFieldChange","setter","target","textAlign","padding","onSubmit","preventDefault","Typography","variant","gutterBottom","TextField","width","label","InputLabelProps","shrink","onChange","test","FormHelperText","className","Button","size","onClick","disabled","SignupPage","confirmPassword","setConfirmPassword","isSignuping","setIsSignuping","isConfirmPasswordError","stateSetter","helperText","ShowSuccessDialog","props","onClose","Dialog","AppBar","position","Toolbar","IconButton","edge","flex","ForgetPasswordPage","openDialog","setOpenDialog","client","searchInput","showAddDialog","showDeleteDialog","showEditDialog","order","orderList","searchProductIntput","selectedProductItems","productPage","selectedItems","addInventoryDialog","show","addPurchaseDialog","subscriptionRuleDialog","bottomNavigation","index","setSearchInput","toLowerCase","toggleProduct","clearSelectedProducts","changeBottomNavigationIndex","showAddInventoryDialog","showAddPurchaseDialog","showSubscriptionRuleDialog","NAV_LIST","PeopleIcon","WatchLaterIcon","AccountCircleIcon","icon","AppNavigation","AppStore","navIndex","findIndex","nav","useInitNavgationByPathname","BottomNavigation","showLabels","event","BottomNavigationAction","useStyles","makeStyles","theme","search","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchBox","classes","InputBase","autoFocus","placeholder","root","input","inputProps","ClientItem","purchase","clientId","purchaseDate","sort","b","lastPurchaseDate","birth","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","lastName","firstName","secondary","ClientsPage","clientList","c","flexGrow","List","requestSubmit","form","fakeButton","document","createElement","appendChild","click","remove","formatDate","date","YYYY","getFullYear","MM","getMonth","DD","getDate","Transition","forwardRef","Slide","direction","DefaultFormValues","phone","city","note","AddClientDialog","setIsLoading","showAddClientDialog","formRef","formValues","setFormValues","add","fullScreen","TransitionComponent","required","multiline","ClientInfoPage","useParams","purchaseCollection","groupedPurchaseData","orderId","renderPurchaseData","keys","Date","slice","arr","orderValue","renderedList","productId","amount","src","nanoid","Accordion","AccordionSummary","expandIcon","flexBasis","AccordionDetails","AccordionActions","EditClientDialog","showEditClientDialog","clientInfo","info","DeleteClientDialog","showDeleteClientDialog","deleteClient","delete","DialogTitle","DialogContent","DialogContentText","DialogActions","shouldBeString","TypeError","shouldBeNonEmptyString","RangeError","shouldBeNumber","schema","createPurchase","remindDates","shouldBePositiveNumber","shouldBeNonEmptyObject","OrderItem","orderIndex","setOrderList","updateItemAmount","draft","newAmount","splice","ListItemSecondaryAction","ButtonGroup","CreateOrderPage","param","showConfirmDialog","setShowConfirmDialog","isSavingOrderList","setIsSavingOrderList","chosenProducts","totalPrice","total","closeDialog","saveOrderList","_","moment","format","acc","cur","currentYear","year","month","Schema","commit","container","getElementById","dividers","ProductItemRenderer","ListItemIcon","Checkbox","checked","ProductPage","filteredProductList","itemData","itemSize","itemCount","columns","field","headerName","InventoryPage","inventory","rows","autoHeight","pageSize","Fab","AddInventoryDialog","Number","parseInt","FormControl","InputLabel","Select","MenuItem","min","ClientAccordions","setChecked","clients","clientName","clientPurchases","lists","purchases","currentIndex","indexOf","newChecked","ReminderPage","thisMonth","chosenMonth","setChosenMonth","thisYear","chosenYear","setChosenYear","aggregate","unordered","accordionData","aggregateByClient","remindMonths","aggregateByDate","reverse","AddPurchaseDialog","SubscriptionStatus","Card","CardContent","component","CardActions","ecpay","functions","httpsCallable","ClientBackURL","window","location","href","OrderResultURL","result","write","html_form","FAQ","AccountPage","creationDate","SubscriptionRuleDialog","isBottomed","setIsBottomed","onScroll","scrollHeight","scrollTop","clientHeight","App","exact","path","to","ReactDOM","render","basename"],"mappings":"kQAIMA,EAAe,SAAfA,EAAgBC,EAAKC,EAAUC,GACnC,IADgD,IAAD,aAC1C,0BAAOC,EAAP,KAAYC,EAAZ,KACGC,EAAOC,OAAOC,UAAUC,SAASC,KAAKL,GAE5C,GAAa,sBAATC,EACFL,EAAIG,GAAO,kBAAcF,EAASG,EAAM,WAAN,mBAC7B,IAAa,oBAATC,EAIT,MAAM,IAAIK,MAAJ,6BACkBP,EADlB,cAC2BE,EAD3B,+CAHNL,EAAIG,GAAO,GACXJ,EAAaC,EAAIG,GAAMF,EAAUG,KAPrC,MAA4BE,OAAOK,QAAQT,GAA3C,eAAsD,KAwDzCU,EAlCK,WAAmC,IAAlCC,EAAiC,uDAArB,GAAIX,EAAiB,uDAAP,GAEvCY,EAAeC,cACfC,EAAkBC,0BAClBC,EAAgBD,0BAGhBE,EAAW,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAkD,IAAxCP,UAAWQ,OAA6B,MAAhBR,EAAgB,EACpE,EAA0BS,qBAAWC,IAASF,GAA9C,mBAAOG,EAAP,KAAcvB,EAAd,KAGMwB,EAAYC,iBAAO,MAMzB,OAL0B,OAAtBD,EAAUE,UACZF,EAAUE,QAAU,GACpB5B,EAAa0B,EAAUE,QAAS1B,EAAUC,IAI1C,cAACY,EAAaK,SAAd,CAAuBS,MAAOJ,EAA9B,SACE,cAACR,EAAgBG,SAAjB,CAA0BS,MAAO3B,EAAjC,SACE,cAACiB,EAAcC,SAAf,CAAwBS,MAAOH,EAAUE,QAAzC,SAAmDP,SAM3D,MAAO,CACLD,WACAU,SAAU,eAACC,EAAD,uDAAY,SAACN,GAAD,OAAWA,GAAvB,OAAiCO,YAAmBjB,EAAcgB,IAC5EE,YAAa,kBAAMC,qBAAWjB,IAC9BkB,UAAW,kBAAMD,qBAAWf,M,oCCnChCiB,IAASC,cAXc,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjBR,IAASS,YAET,IACMC,EAAWjC,EAAY,CAC3BkC,gBAAgB,EAChBC,SAAS,EACTC,KAAM,CACJC,IAAK,GACLC,MAAO,GACPC,aAAc,IAEhBC,IAAK,GACLC,WAVkB,CAAC,SAAU,UAAW,YAAa,YAU7BC,QAAO,SAACC,EAAKC,GAEnC,OADAD,EAAIC,GAAe,CAAEC,WAAW,EAAMC,KAAM,IACrCH,IACN,MAoHLV,EAASc,6BAhH4B,WACnC,IAAM1D,EAAW4C,EAASb,cAC1B4B,qBAAU,WACR,IAAIC,GAAY,EAkBhB,OAhBA1B,IAAS2B,OAAOC,mBAAhB,uCAAmC,WAAOf,GAAP,iBAAAgB,EAAA,yDAC5BH,EAD4B,wEAGLb,QAHK,IAGLA,OAHK,EAGLA,EAAMiB,mBAHD,OAG3BC,EAH2B,OAK3BnB,IAAYC,EAClB/C,GAAS,SAACuB,GAAW,IAAD,IAClBA,EAAMsB,gBAAiB,EACvBtB,EAAMuB,QAAUA,EAChBvB,EAAMwB,KAAKC,IAAMF,EAAUC,EAAKC,IAAM,GACtCzB,EAAMwB,KAAKE,MAAQH,EAAUC,EAAKE,MAAQ,GAC1C1B,EAAMwB,KAAKG,aAAeJ,EAAO,UAAGC,EAAKmB,gBAAR,aAAG,EAAehB,aAAe,GAClE3B,EAAMwB,KAAKoB,eAAX,OAA4BF,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAeG,cAA3C,aAA4B,EAAuBC,mBAZpB,2CAAnC,uDAgBO,WACLT,GAAY,KAEb,CAAC5D,KAyFN4C,EAAS0B,MAAQ,SAACrB,EAAOsB,GAAR,OAAqBrC,IAAS2B,OAAOW,2BAA2BvB,EAAOsB,IACxF3B,EAAS6B,OAAS,kBAAMvC,IAAS2B,OAAOa,WACxC9B,EAAS+B,OAAT,uCAAkB,WAAO1B,EAAOsB,GAAd,eAAAR,EAAA,sEACG7B,IAAS2B,OAAOe,+BAA+B3B,EAAOsB,GADzD,cACVM,EADU,gBAEV3C,IAAS4C,YAAY1B,WAAW,QAAQD,IAAI0B,EAAK9B,KAAKC,KAAK+B,IAAI,CACnE9B,MAAO4B,EAAK9B,KAAKE,QAHH,2CAAlB,wDAMAL,EAASoC,uBAAyB,SAAC/B,GAAD,OAAWf,IAAS2B,OAAOmB,uBAAuB/B,IAGpFL,EAASqC,uBAhGsB,SAACC,GAC9B,IAAMpC,EAAUF,EAAShB,UAAS,SAACL,GAAD,OAAWA,EAAMuB,WAC7CE,EAAMJ,EAAShB,UAAS,SAACL,GAAD,OAAWA,EAAMwB,KAAKC,OAC9ChD,EAAW4C,EAASb,cAE1B4B,qBAAU,WACR,IAAIC,GAAY,EAChB,GAAKd,EAuCL,OArCA9C,GAAS,SAACuB,GACRA,EAAM6B,WAAW8B,GAAgB1B,WAAY,KAG/CtB,IACG4C,YACA1B,WAAW,QACXD,IAAIH,GACJI,WAAW8B,GACXC,YAEC,SAACC,GACMxB,GAEL5D,GAAS,SAACuB,GAER,IAAMkC,EAAO2B,EAAKC,KAAKC,KAAI,SAACnC,GAAD,oBACzBoC,GAAIpC,EAAIoC,IACLpC,EAAIqC,WAITjE,EAAM6B,WAAW8B,GAAkB,CAAE1B,WAAW,EAAOC,QAGvDA,EAAKgC,SAAQ,SAACC,GACZnE,EAAM4B,IAAIuC,EAAKH,IAAMG,WAM3B,SAACC,GACCC,QAAQC,IAAIF,EAAMG,YAIjB,WACLlC,GAAY,KAEb,CAAC5D,EAAUgD,EAAKF,EAASoC,KAgD9BtC,EAASmD,cA5Ca,SAACb,GACrB,OAAOtC,EAAShB,UAAS,SAACL,GAAD,OAAWA,EAAM6B,WAAW8B,OA4CvDtC,EAASoD,YAxCW,WAClB,IAAMC,EAAYrD,EAAShB,UAAS,SAACsE,GAAD,OAAOA,EAAE/C,OAC7C,OAAO,SAACoC,GAIN,OAHKU,EAAUE,eAAeZ,IAC5BK,QAAQQ,KAAR,oBAA0Bb,EAA1B,qBAEKU,EAAUV,KAmCrB3C,EAASyD,aA3BY,WACnB,IAAMC,EAAc1D,EAAShB,UAAS,SAACsE,GAAD,OAAOA,EAAE9C,cAE3CI,GAAY,EAChB,IAAK,IAAM+C,KAAQD,EACjB9C,GAAa8C,EAAYC,GAAM/C,UAGjC,OAAOA,GAoBTZ,EAAS4D,MAAQ,kBAAMtE,IAAS4C,YAAY0B,SAC5C5D,EAASQ,WAAa,SAAC8B,GACrB,OAAOhD,IACJ4C,YACA1B,WAAW,QACXD,IAAIjB,IAAS2B,OAAO4C,YAAYzD,KAChCI,WAAW8B,IAIhBtC,EAASV,SAAWA,IAELU,Q,0BCpLT8D,EAAS,CACbC,YAAa,CAEX,CAAC,iCAAS,sBAAuB,iBACjC,CAAC,iCAAS,sBAAuB,0BACjC,CAAC,iCAAS,sBAAuB,6CACjC,CAAC,iCAAS,sBAAuB,+DACjC,CAAC,iCAAS,sBAAuB,8CACjC,CAAC,iCAAS,sBAAuB,wCACjC,CAAC,iCAAS,sBAAuB,wCACjC,CAAC,iCAAS,sBAAuB,wCACjC,CAAC,iCAAS,sBAAuB,qDACjC,CAAC,iCAAS,sBAAuB,iCACjC,CAAC,iCAAS,sBAAuB,wCACjC,CAAC,iCAAS,sBAAuB,4BACjC,CAAC,iCAAS,sBAAuB,wCACjC,CAAC,iCAAS,sBAAuB,8CACjC,CAAC,iCAAS,sBAAuB,4BACjC,CAAC,iCAAS,sBAAuB,0CAKjC,CAAC,iCAAS,sBAAuB,yBACjC,CAAC,iCAAS,sBAAuB,4BACjC,CAAC,iCAAS,sBAAuB,oBACjC,CAAC,iCAAS,sBAAuB,4BACjC,CAAC,iCAAS,sBAAuB,4BACjC,CAAC,iCAAS,sBAAuB,4BACjC,CAAC,iCAAS,sBAAuB,kCACjC,CAAC,iCAAS,sBAAuB,6BAEnCC,mBAAoB,IAoBhBC,EAAc,uCAAG,kCAAA9C,EAAA,yDACa,IAA9B2C,EAAOC,YAAYG,OADF,yCAEZJ,EAAOC,YAAYrB,KAAI,SAACyB,GAAD,MAAc,CAC1CC,OAAQD,EAAQ,GAChBxB,GAAIwB,EAAQ,GACZR,KAAMQ,EAAQ,QALG,aAUT,0DAVS,SAWHE,IAAMC,IADZ,2DAVS,cAWfC,EAXe,OAYfC,EAAgBD,EAAI3B,KAAK6B,MAAML,OAAOM,wBAAwB,GAAGD,MAGjEE,EAAgBH,EACnBI,MAAK,kBAA+B,mCAA/B,EAAGC,YACRJ,MAAMG,MAAK,kBAA+B,iBAA/B,EAAGC,YACdJ,MAAMK,QAAO,gBAAGD,EAAH,EAAGA,SAAH,MAA+B,6BAAbA,GAAoC,mCAAbA,KACtDnC,KAAI,kBAA+B,CAClC0B,OAAQ,iCACRT,KAFG,EAAGkB,SAGNlC,GAHG,EAAaoC,eAOdC,EAAyBR,EAC5BI,MAAK,kBAA+B,mCAA/B,EAAGC,YACRJ,MAAMG,MAAK,kBAA+B,iBAA/B,EAAGC,YACdJ,MAAM/B,KAAI,kBAA+B,CACxC0B,OAAQ,iCACRT,KAFS,EAAGkB,SAGZlC,GAHS,EAAaoC,eA7BL,kBAmCdJ,EAAcM,OAAOD,IAnCP,4CAAH,qDA2CdE,EAAsB,uCAAG,WAAOd,GAAP,eAAAjD,EAAA,sEACH8C,IADG,cACvBF,EADuB,yBAItBA,EACJe,QAAO,SAACX,GAAD,OAAaA,EAAQC,SAAWA,KACvC1B,KAAI,SAACyB,GAAD,OAAaA,EAAQR,SANC,2CAAH,sDAsBtBwB,EAA2B,uCAAG,WAAOhB,GAAP,iBAAAhD,EAAA,4DACrB,yFACPiE,EAF4B,UACrB,yFADqB,6CAEsBjB,EAAQxB,IAF9B,SAGhB0B,IAAMC,IAAIc,GAHM,cAG5Bb,EAH4B,yBAK3BA,EAAI3B,KAAKA,KAAKyC,QAAQxE,KAAK6B,KAAI,SAACI,GAAD,MAAW,CAC/CH,GAAIG,EAAKwC,OACT3B,KAAMb,EAAKyC,SACXC,MAAO1C,EAAK2C,UAAU,GAAGC,UACzBC,IAAK7C,EAAK8C,sBACVzB,eAVgC,2CAAH,sDAkB3B0B,EAAiB,uCAAG,4CAAA1E,EAAA,sEACE8C,IADF,cAClBF,EADkB,gBAEe+B,QAAQC,IAAIhC,EAAYrB,IAAIyC,IAF3C,OAElBa,EAFkB,OAKlBC,EAAa,IAAIC,IALC,cAMDF,GANC,IAMxB,2BAAiD,CAAtCG,EAAsC,sBAC/BA,GAD+B,IAC/C,2BAAWC,EAAe,QACxBH,EAAW9D,IAAIiE,EAAEzD,GAAIyD,GAFwB,gCANzB,uDAYjBC,MAAMC,KAAKL,EAAWM,WAZL,4CAAH,qDA0BjBC,EAAqB,uCAAG,gCAAArF,EAAA,yDACa,IAArC2C,EAAOE,mBAAmBE,OADF,yCAEnBJ,EAAOE,oBAFY,uBAKFC,IALE,cAKtBF,EALsB,gBAMW+B,QAAQC,IAAIhC,EAAYrB,IAAIyC,IANvC,OAQ5B,IAFMa,EANsB,OAQnBS,EAAI,EAAGA,EAAI1C,EAAYG,OAAQuC,IACtC1C,EAAY0C,GAAGtC,QAAUJ,EAAY0C,GAAG9C,KACxCI,EAAY0C,GAAGC,YAAcV,EAAyBS,UAC/C1C,EAAY0C,GAAG9D,UACfoB,EAAY0C,GAAG9C,KAZI,OAgB5BG,EAAOE,mBAAqBD,EAhBA,kBAiBrBA,GAjBqB,4CAAH,qDA2DZ4C,EANG,CAChBC,cAhLoB,iBAAM,CAAC,iCAAS,mCAiLpC1B,yBACA2B,uBA9B0B,uCAAG,gEAAA1F,EAAA,0FAAuC,GAAvC,IAASiD,cAAT,MAAkB,GAAlB,MAAsBD,eAAtB,MAAgC,GAAhC,EAEd,KAAXC,GAA6B,KAAZD,EAFQ,yCAGpB0B,KAHoB,uBAMIW,IANJ,UAMvBxC,EANuB,OASd,KAAXI,GAA6B,KAAZD,EATQ,iBAUrB8B,EAAa,IAAIC,IAVI,cAWTlC,GAXS,8DAWhB8C,EAXgB,SAYjB1C,SAAWA,EAZM,sEAaH0C,EAAIJ,aAbD,IAazB,2BAAWK,EAA4B,QACrCd,EAAW9D,IAAI4E,EAAQpE,GAAIoE,GAdJ,uMAiBpBV,MAAMC,KAAKL,EAAWM,WAjBF,WAqBd,KAAXnC,GAA6B,KAAZD,EArBQ,0CAsBpBH,EAAmBY,MAAK,SAACkC,GAAD,OAASA,EAAI1C,SAAWA,GAAU0C,EAAI3C,UAAYA,KAC9EuC,aAvBwB,gEAAH,sDC7GbM,EAdI,YAtCe,WAChC,IAAM5J,EAAW4C,EAASb,cAE1B4B,qBAAU,WACR,IAAIC,GAAY,EA4BhB,OA1BA5D,GAAS,SAACuB,GACRA,EAAM6B,WAAWuG,QAAQnG,WAAY,KAGvC+F,EAAUE,yBACPI,MAAK,SAACpG,GACAG,GAEL5D,GAAS,SAACuB,GACRA,EAAM6B,WAAWuG,QAAU,CAAElG,OAAMD,WAAW,GAG9CC,EAAKgC,SAAQ,SAACC,GACZnE,EAAM4B,IAAIuC,EAAKH,IAAMG,WAI1BoE,OAAM,SAACC,GACNnE,QAAQC,IAAIkE,GAEPnG,GACL5D,GAAS,SAACuB,GACRA,EAAM6B,WAAWuG,QAAQnG,WAAY,QAIpC,WACLI,GAAY,KAEb,CAAC5D,IAKJgK,GAGApH,EAASc,+BACTd,EAASqC,uBAAuB,UAChCrC,EAASqC,uBAAuB,YAChCrC,EAASqC,uBAAuB,aApEA,WAChC,IAAMgF,EAAUC,cACRC,EAAaC,cAAbD,SACR,EAAiCvH,EAAShB,UAAS,SAACL,GAAD,MAAW,EAC3DA,EAAMsB,eACPtB,EAAMuB,YAFR,mBAAOuH,EAAP,KAAsBvH,EAAtB,KAIMwH,GAAe,CAAC,SAAU,UAAW,oBAAoBC,SAASJ,GAExExG,qBAAU,WAEJ0G,GAAiBC,IAAgBxH,GACnCmH,EAAQO,KAAK,UAIXH,IAAkBC,GAAexH,GACnCmH,EAAQO,KAAK,cAEd,CAACP,EAASI,EAAeC,EAAaxH,EAASqH,IAoDlDM,I,oDClEaC,EARA,SAAC,GAAqB,IAAD,IAAlBC,YAAkB,SAClC,OACE,cAACC,EAAA,EAAD,CAAUC,MAAO,CAAEC,OAAQ,KAAOH,KAAMA,EAAxC,SACE,cAACI,EAAA,EAAD,CAAkBC,MAAM,eCMxBC,EAAkB,SAACtF,GAOvB,MANsB,CACpB,qBAAsB,6CACtB,qBAAsB,6CACtB,sBAAuB,uCACvB,sBAAuB,4BAEJA,EAAMuF,OAApB,UAAgCvF,EAAMuF,KAAtC,aAA+CvF,EAAMG,UAwF/CqF,EArFG,WAChB,IAAMlB,EAAUC,cAChB,EAA0BtI,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcmI,EAAd,KACA,EAAgCxJ,mBAAS,IAAzC,mBAAO2C,EAAP,KAAiB8G,EAAjB,KACA,EAAoCzJ,oBAAS,GAA7C,mBAAO0J,EAAP,KAAmBC,EAAnB,KACA,EAA0B3J,mBAAS,CAAEsJ,KAAM,GAAIpF,QAAS,KAAxD,mBAAOH,EAAP,KAAc6F,EAAd,KAEMC,EAAgB,SAACC,GAAD,OAAY,SAAC3B,GACjCyB,EAAS,CAAEN,KAAM,GAAIpF,QAAS,KAC9B4F,EAAO3B,EAAE4B,OAAOhK,SAGlB,OACE,uBACEkJ,MAAO,CAAEe,UAAW,SAAUC,QAAS,QACvCC,SAAQ,uCAAE,WAAO/B,GAAP,SAAAhG,EAAA,6DACRgG,EAAEgC,iBAEFR,GAAc,GAHN,SAIF3I,EAAS0B,MAAMrB,EAAOsB,GAAUuF,MAAM0B,GAJpC,OAKRD,GAAc,GALN,2CAAF,sDAFV,UAUE,cAAC,EAAD,CAAQZ,KAAMW,IAEd,uBACA,uBACA,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,sBAKA,cAACC,EAAA,EAAD,CACEtB,MAAO,CAAEuB,MAAO,QAChB7F,KAAK,QACLnG,KAAK,QACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EAAcL,GACxBzF,MAAO,QAAQ8G,KAAK9G,EAAMuF,QAG5B,uBACA,uBAGA,cAACiB,EAAA,EAAD,CACEtB,MAAO,CAAEuB,MAAO,QAChB7F,KAAK,WACLnG,KAAK,WACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EAAcJ,GACxB1F,MAAO,WAAW8G,KAAK9G,EAAMuF,QAG/B,uBACA,uBACA,uBACCvF,EAAMuF,MAAQ,cAACwB,EAAA,EAAD,CAAgB/G,OAAO,EAAvB,SAA8BsF,EAAgBtF,KAC5DA,EAAMuF,MAAQ,uBAEf,sBAAKyB,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQ7B,MAAM,UAAU8B,QAAS,kBAAM7C,EAAQO,KAAK,YAAjE,4CAGA,cAACoC,EAAA,EAAD,CAAQC,KAAK,QAAQ7B,MAAM,UAAU8B,QAAS,kBAAM7C,EAAQO,KAAK,qBAAjE,sCAGA,cAACoC,EAAA,EAAD,CACEX,QAAQ,YACRY,KAAK,QACLzM,KAAK,SACL4K,MAAM,UACN+B,SAAoB,KAAV9J,GAA6B,KAAbsB,EAL5B,iCCjFF0G,EAAkB,SAACtF,GAMvB,MALsB,CACpB,qBAAsB,6CACtB,4BAA6B,mDAC7B,qBAAsB,0DAEHA,EAAMuF,OAApB,UAAgCvF,EAAMuF,KAAtC,aAA+CvF,EAAMG,UAyG/CkH,EAtGI,WACjB,IAAM/C,EAAUC,cAChB,EAA0BtI,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcmI,EAAd,KACA,EAAgCxJ,mBAAS,IAAzC,mBAAO2C,EAAP,KAAiB8G,EAAjB,KACA,EAA8CzJ,mBAAS,IAAvD,mBAAOqL,EAAP,KAAwBC,EAAxB,KACA,EAAsCtL,oBAAS,GAA/C,mBAAOuL,EAAP,KAAoBC,EAApB,KACA,EAA0BxL,mBAAS,CAAEsJ,KAAM,GAAIpF,QAAS,KAAxD,mBAAOH,EAAP,KAAc6F,EAAd,KACM6B,EACS,KAAb9I,GAAuC,KAApB0I,GAA0B1I,IAAa0I,EAEtDxB,EAAgB,SAAC6B,GAAD,OAAiB,SAACvD,GACtCyB,EAAS,CAAEN,KAAM,GAAIpF,QAAS,KAC9BwH,EAAYvD,EAAE4B,OAAOhK,SAGvB,OACE,uBACEkJ,MAAO,CAAEe,UAAW,SAAUC,QAAS,QACvCC,SAAQ,uCAAE,WAAO/B,GAAP,SAAAhG,EAAA,6DACRgG,EAAEgC,iBAEFqB,GAAe,GAHP,SAIFxK,EAAS+B,OAAO1B,EAAOsB,GAAUuF,MAAM0B,GAJrC,OAKR4B,GAAe,GALP,2CAAF,sDAFV,UAUE,cAAC,EAAD,CAAQzC,KAAMwC,IAEd,uBACA,uBACA,cAACnB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,sBAKA,cAACC,EAAA,EAAD,CACEtB,MAAO,CAAEuB,MAAO,QAChB7F,KAAK,QACLnG,KAAK,QACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EAAcL,GACxBzF,MAAO,QAAQ8G,KAAK9G,EAAMuF,QAG5B,uBACA,uBAGA,cAACiB,EAAA,EAAD,CACEtB,MAAO,CAAEuB,MAAO,QAChB7F,KAAK,WACLnG,KAAK,WACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EAAcJ,GACxB1F,MAAO,WAAW8G,KAAK9G,EAAMuF,QAG/B,uBACA,uBAGA,cAACiB,EAAA,EAAD,CACEtB,MAAO,CAAEuB,MAAO,QAChB7F,KAAK,mBACLnG,KAAK,WACLiM,MAAM,2BACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EAAcyB,GACxBvH,MAAO0H,EACPE,WAAYF,GAA0B,yCAGxC,uBACA,uBAEC1H,EAAMuF,MAAQ,cAACwB,EAAA,EAAD,CAAgB/G,OAAO,EAAvB,SAA8BsF,EAAgBtF,KAC5DA,EAAMuF,MAAQ,uBAEf,sBAAKyB,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQ7B,MAAM,UAAU8B,QAAS,kBAAM7C,EAAQO,KAAK,WAAjE,kDAIA,cAACoC,EAAA,EAAD,CACEX,QAAQ,YACRY,KAAK,QACLzM,KAAK,SACL4K,MAAM,UACN+B,SAAoB,KAAV9J,GAA6B,KAAbsB,GAAmBA,IAAa0I,EAL5D,iC,oDC/FFhC,EAAkB,SAACtF,GAMvB,MALsB,CACpB,qBAAsB,6CACtB,sBAAuB,uCACvB,yBAA0B,kCAEPA,EAAMuF,OAApB,UAAgCvF,EAAMuF,KAAtC,aAA+CvF,EAAMG,UAG9D,SAAS0H,EAAkBC,GACzB,IAAM9C,EAAO8C,EAAM9C,KACb+C,EAAUD,EAAMC,QACtB,OACE,cAACC,EAAA,EAAD,CAAQhD,KAAMA,EAAM+C,QAASA,EAA7B,SACE,cAACE,EAAA,EAAD,CAAQ/C,MAAO,CAAEgD,SAAU,YAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQhD,MAAM,UAAU8B,QAASY,EAAS,aAAW,QAAtE,SACE,cAAC,IAAD,MAEF,cAAC1B,EAAA,EAAD,CAAYC,QAAQ,KAAKpB,MAAO,CAAEoD,KAAM,GAAxC,6CASV,IAyEeC,EAzEY,WACzB,IAMuBZ,EANjBrD,EAAUC,cAChB,EAA0BtI,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcmI,EAAd,KACA,EAAsCxJ,oBAAS,GAA/C,mBAAOuL,EAAP,KAAoBC,EAApB,KACA,EAA0BxL,mBAAS,CAAEsJ,KAAM,GAAIpF,QAAS,KAAxD,mBAAOH,EAAP,KAAc6F,EAAd,KACA,EAAoC5J,oBAAS,GAA7C,mBAAOuM,EAAP,KAAmBC,EAAnB,KAOA,OACE,uBACEvD,MAAO,CAAEe,UAAW,SAAUC,QAAS,QACvCC,SAAQ,uCAAE,WAAO/B,GAAP,SAAAhG,EAAA,6DACRgG,EAAEgC,iBAEFqB,GAAe,GAHP,SAIFxK,EAASoC,uBAAuB/B,GACnC4G,MAAK,WACJuE,GAAc,MAEftE,MAAM0B,GARD,OASR4B,GAAe,GATP,2CAAF,sDAFV,UAcE,cAACI,EAAD,CAAmB7C,KAAMwD,EAAYT,QAAS,kBAAMU,GAAc,MAClE,cAAC,EAAD,CAAQzD,KAAMwC,IAEd,uBACA,uBACA,cAACnB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,sBAKA,cAACC,EAAA,EAAD,CACEtB,MAAO,CAAEuB,MAAO,QAChB7F,KAAK,QACLnG,KAAK,QACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,UArCiBc,EAqCOlC,EArCS,SAACrB,GACtCyB,EAAS,CAAEN,KAAM,GAAIpF,QAAS,KAC9BwH,EAAYvD,EAAE4B,OAAOhK,SAoCjBgE,MAAO,QAAQ8G,KAAK9G,EAAMuF,QAG5B,uBACA,uBAECvF,EAAMuF,MAAQ,cAACwB,EAAA,EAAD,CAAgB/G,OAAO,EAAvB,SAA8BsF,EAAgBtF,KAC5DA,EAAMuF,MAAQ,uBAEf,sBAAKyB,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQ7B,MAAM,UAAU8B,QAAS,kBAAM7C,EAAQO,KAAK,WAAjE,kDAIA,cAACoC,EAAA,EAAD,CACEX,QAAQ,YACRY,KAAK,QACLzM,KAAK,SACL4K,MAAM,UACN+B,SAAoB,KAAV9J,EALZ,yD,kEC5COtC,KApDE,CACf0N,OAAQ,CACNC,YAAa,GACbC,eAAe,EACfC,kBAAkB,EAClBC,gBAAgB,EAEhBC,MAAO,CACLC,UAAW,GACXC,oBAAqB,GACrBC,qBAAsB,KAI1BC,YAAa,CACXR,YAAa,GACbS,cAAe,IAEjBC,mBAAoB,CAAEC,MAAM,GAC5BC,kBAAmB,CAAED,MAAM,GAC3BE,uBAAwB,CAAEF,MAAM,GAChCG,iBAAkB,CAAEC,MAAO,IAqBV,CACjBhB,OChCoB,CACpBiB,eAjBqB,SAAChB,GAAD,OAAiB,SAAC/M,GACvCA,EAAM8M,OAAOC,YAAcA,EAAYiB,gBAiBvChB,cAdoB,SAACU,GAAD,OAAU,SAAC1N,GAC/BA,EAAM8M,OAAOE,cAAgBU,IAc7BR,eAXqB,SAACQ,GAAD,OAAU,SAAC1N,GAChCA,EAAM8M,OAAOI,eAAiBQ,IAW9BT,iBARuB,SAACS,GAAD,OAAU,SAAC1N,GAClCA,EAAM8M,OAAOG,iBAAmBS,KDoChCtF,QEjCqB,CACrB2F,eAjBqB,SAAChB,GAAD,OAAiB,SAAC/M,GACvCA,EAAMuN,YAAYR,YAAcA,EAAYiB,gBAiB5CC,cAdoB,SAAC7F,GAAD,OAAa,SAACpI,GAC9BA,EAAMuN,YAAYC,cAAc5I,eAAewD,EAAQpE,WAClDhE,EAAMuN,YAAYC,cAAcpF,EAAQpE,IAE/ChE,EAAMuN,YAAYC,cAAcpF,EAAQpE,KAAM,IAWhDkK,sBAP4B,kBAAM,SAAClO,GACnCA,EAAMuN,YAAYC,cAAgB,MFqClCW,4BAnBkC,eAACL,EAAD,uDAAS,EAAT,OAAe,SAAC9N,GAClDA,EAAM6N,iBAAiBC,MAAQA,IAmB/BM,uBAhB6B,SAACV,GAAD,OAAU,SAAC1N,GACxCA,EAAMyN,mBAAmBC,KAAOA,IAgBhCW,sBAb4B,SAACX,GAAD,OAAU,SAAC1N,GACvCA,EAAM2N,kBAAkBD,KAAOA,IAa/BY,2BAViC,SAACZ,GAAD,OAAU,SAAC1N,GAC5CA,EAAM4N,uBAAuBF,KAAOA,M,mFG9BhCa,GAAW,CACf,CAAC,WAAY,eAAMC,MAEnB,CAAC,YAAa,2BAAQC,MACtB,CAAC,WAAY,2BAAQC,OACrB3K,KAAI,SAACI,GACL,kBAAgCA,EAAhC,GACA,MAAO,CAAEyE,SADT,KACmBkC,MADnB,KAC0B6D,KAD1B,SAoCaC,GAxBO,WACpB,IAAMhQ,EAASiQ,GAASnO,aATS,SAAC9B,GAClC,IAAQgK,EAAaC,cAAbD,SACRxG,qBAAU,WACR,IAAM0M,EAAWP,GAASQ,WAAU,SAACC,GAAD,OAASA,EAAIpG,WAAaA,KAC9DhK,EAAOuP,6BAA0C,IAAdW,EAAkB,EAAIA,KACxD,CAAClQ,EAAQgK,IAKZqG,CAA2BrQ,GAE3B,IAAMoQ,EAAMH,GAASxO,UAAS,SAACL,GAAD,OAAWA,EAAM6N,oBACzCnF,EAAUC,cAEhB,OACE,cAACuG,GAAA,EAAD,CACEC,YAAU,EACV/O,MAAO4O,EAAIlB,MACX7C,SAAU,SAACmE,EAAON,GAChBlQ,EAAOuP,4BAA4BW,GACnC,IAAME,EAAMT,GAASO,IAAaP,GAAS,GAC3C7F,EAAQO,KAAK+F,EAAIpG,WANrB,SASG2F,GAASxK,KAAI,SAACiL,EAAKlB,GAAN,OACZ,cAACuB,GAAA,EAAD,CAAoCvE,MAAOkE,EAAIlE,MAAO6D,KAAM,cAACK,EAAIL,KAAL,KAA/Bb,S,2DC5C/BwB,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,OAAO,cACLnD,SAAU,WACVoD,aAAcF,EAAMG,MAAMD,aAC1BE,gBAAiBC,aAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,aAAML,EAAMM,QAAQC,OAAOC,MAAO,MAErDC,YAAaT,EAAMU,QAAQ,GAC3BC,WAAY,EACZtF,MAAO,QACN2E,EAAMY,YAAYC,GAAG,MAAQ,CAC5BF,WAAYX,EAAMU,QAAQ,GAC1BrF,MAAO,SAGXyF,WAAY,CACVhG,QAASkF,EAAMU,QAAQ,EAAG,GAC1BK,OAAQ,OACRjE,SAAU,WACVkE,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTnH,MAAO,WAEToH,WAAW,cACTvG,QAASkF,EAAMU,QAAQ,EAAG,EAAG,EAAG,GAEhCY,YAAY,cAAD,OAAgBtB,EAAMU,QAAQ,GAA9B,OACXa,WAAYvB,EAAMwB,YAAYC,OAAO,SACrCpG,MAAO,QACN2E,EAAMY,YAAYC,GAAG,MAAQ,CAC5BxF,MAAO,aAKE,SAASqG,GAAT,GAA+C,IAA1BnE,EAAyB,EAAzBA,YAAa9B,EAAY,EAAZA,SACzCkG,EAAU7B,KAChB,OACE,sBAAKlE,UAAW+F,EAAQ1B,OAAxB,UACE,qBAAKrE,UAAW+F,EAAQb,WAAxB,SACE,cAAC,KAAD,MAEF,cAACc,GAAA,EAAD,CACEC,WAAS,EACTC,YAAY,eACZH,QAAS,CACPI,KAAMJ,EAAQP,UACdY,MAAOL,EAAQN,YAEjBY,WAAY,CAAE,aAAc,UAC5BrR,MAAO2M,EACP9B,SAAUA,OCvClB,IAAMyG,GAAa,SAAC,GAA0B,IAAxB5E,EAAuB,EAAvBA,OAAQ6E,EAAe,EAAfA,SACtBjJ,EAAUC,cAEhB,EAAiCgJ,EAASzP,KACvCiE,QAAO,SAACwL,GAAD,OAAcA,EAASC,WAAa9E,EAAO9I,MAClDD,KAAI,SAAC4N,GAAD,OAAcA,EAASE,gBAC3BC,MAAK,SAACtP,EAAGuP,GAAJ,OAAWvP,EAAIuP,EAAI,EAAIvP,EAAIuP,GAAK,EAAI,KAH5C,sBAAOC,OAAP,MAA0B,SAA1B,EAKMC,EAAQnF,EAAOmF,MAAP,YAAoBnF,EAAOmF,MAA3B,KAAsC,GAEpD,OACE,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAC5G,QAAS,kBAAM7C,EAAQO,KAAK,YAAc6D,EAAO9I,KAAlE,UACE,cAACoO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CACEC,QAASzF,EAAO0F,SAAW1F,EAAO2F,UAAYR,EAC9CS,UAAW,6CAAYV,QA4ChBW,GAtCK,WAClB,IAAM/T,EAASiQ,GAASnO,YAClBoM,EAASzL,EAASmD,cAAc,UAChCmN,EAAWtQ,EAASmD,cAAc,YAClCuI,EAAc8B,GAASxO,UAAS,SAACsE,GAAD,OAAOA,EAAEmI,OAAOC,eAItD,GADsB1L,EAASyD,eAE7B,OAAO,cAAC,EAAD,IAGT,IAAM8N,EAAa9F,EAAO5K,KACvBiE,QAAO,SAAC0M,GAAD,OAAQA,EAAEL,SAAWK,EAAEJ,WAAWzE,cAAchF,SAAS+D,MAChEhJ,KAAI,SAAC8O,GAAD,OAAO,cAAC,GAAD,CAAuB/F,OAAQ+F,EAAGlB,SAAUA,GAA3BkB,EAAE7O,OAEjC,OACE,sBAAKoH,UAAU,kBAAf,UACE,cAACiB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC2E,GAAD,CACEnE,YAAaA,EACb9B,SAAU,SAACzC,GAAD,OAAO5J,EAAOkO,OAAOiB,eAAevF,EAAE4B,OAAOhK,UAEzD,qBAAKkJ,MAAO,CAAEwJ,SAAU,KACxB,cAACtG,EAAA,EAAD,CAAY/C,MAAM,UAAU8B,QAAS,kBAAM3M,EAAOkO,OAAOE,eAAc,IAAvE,SACE,cAAC,KAAD,WAIN,qBAAK5B,UAAU,gBAAf,SACE,cAAC2H,EAAA,EAAD,UAAOH,MAET,cAAC,GAAD,Q,UC/EOI,GAAgB,SAACC,GAE5B,IAAMC,EAAaC,SAASC,cAAc,UAC1CF,EAAWrU,KAAO,SAClBqU,EAAW5J,MAAMmH,QAAU,OAE3BwC,EAAKI,YAAYH,GAEjBA,EAAWI,QACXJ,EAAWK,UAIAC,GAAa,SAACC,GACzB,IAAMC,EAAOD,EAAKE,cAEdC,EAAKH,EAAKI,WAAa,EACvBD,EAAK,KAAIA,EAAK,IAAMA,GAExB,IAAIE,EAAKL,EAAKM,UAGd,OAFID,EAAK,KAAIA,EAAK,IAAMA,GAElB,GAAN,OAAUJ,EAAV,YAAkBE,EAAlB,YAAwBE,ICFpBE,GAAaC,sBAAW,SAAoB/H,EAAO1N,GACvD,OAAO,cAAC0V,GAAA,EAAD,aAAOC,UAAU,KAAK3V,IAAKA,GAAS0N,OAGvCkI,GAAoB,CACxB5B,SAAU,GACVC,UAAW,GACX4B,MAAO,GACP3S,MAAO,GACP4S,KAAM,GACNrC,MAAO,GACPsC,KAAM,IA4JOC,GAzJS,WACtB,IAAM5V,EAASiQ,GAASnO,YACxB,EAAkCL,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBwS,EAAlB,KACMC,EAAsB7F,GAASxO,UAAS,SAACsE,GAAD,OAAOA,EAAEmI,OAAOE,iBACxD2H,EAAUzU,iBAAO,MACvB,EAAoCG,mBAAS+T,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEM3K,EAAgB,SAAC1B,GACrBqM,EAAc,2BACTD,GADQ,mBAEVpM,EAAE4B,OAAOpF,KAAOwD,EAAE4B,OAAOhK,UAIxBmK,EAAQ,uCAAG,WAAO/B,GAAP,SAAAhG,EAAA,6DACfgG,EAAEgC,iBAEFiK,GAAa,GAHE,SAITpT,EAASQ,WAAW,UAAUiT,IAAIF,GAJzB,OAKfC,EAAcT,IACdK,GAAa,GAEb7V,EAAOkO,OAAOE,eAAc,GARb,2CAAH,sDAWd,OACE,eAACZ,EAAA,EAAD,CACE2I,YAAU,EACV3L,KAAMsL,EACNvI,QAAS,kBAAMvN,EAAOkO,OAAOE,eAAc,IAC3CgI,oBAAqBhB,GAJvB,UAME,cAAC3H,EAAA,EAAD,CAAQ/C,MAAO,CAAEgD,SAAU,YAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLhD,MAAM,UACN8B,QAAS,kBAAM3M,EAAOkO,OAAOE,eAAc,IAC3C,aAAW,QAJb,SAME,cAAC,IAAD,MAEF,cAACvC,EAAA,EAAD,CAAYC,QAAQ,KAAKpB,MAAO,CAAEoD,KAAM,GAAxC,sCAGA,cAACrB,EAAA,EAAD,CAAQgG,WAAS,EAAC5H,MAAM,UAAU8B,QAAS,kBAAMyH,GAAc2B,EAAQxU,UAAvE,+BAMJ,uBAAMmJ,MAAO,CAAEgB,QAAS,aAAe9L,IAAKmW,EAASpK,SAAUA,EAA/D,UACE,cAAC,EAAD,CAAQnB,KAAMnH,IAGd,cAAC2I,EAAA,EAAD,CACE5F,KAAK,WACL5E,MAAOwU,EAAWpC,SAClB1H,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACEqK,UAAQ,EACRjQ,KAAK,YACL5E,MAAOwU,EAAWnC,UAClB3H,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,QACL5E,MAAOwU,EAAWP,MAClBxV,KAAK,QACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,QACL5E,MAAOwU,EAAWlT,MAClB7C,KAAK,QACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,OACL5E,MAAOwU,EAAWN,KAClBxJ,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,QACL5E,MAAOwU,EAAW3C,MAClBnH,MAAM,eACNjM,KAAK,OACL6L,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EACVZ,MAAO,CAAEuB,MAAO,WAGlB,uBACA,uBAGA,cAACD,EAAA,EAAD,CACE5F,KAAK,OACL5E,MAAOwU,EAAWL,KAClBzJ,MAAM,eACNoK,WAAS,EACTxK,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EACVZ,MAAO,CAAEuB,MAAO,iB,+GCxJX,SAASsK,KACtB,IAAMzM,EAAUC,cACRiJ,EAAawD,cAAbxD,SACFyD,EAAqBhU,EAASmD,cAAc,YAC5C5C,EAAMP,EAASoD,cACf7F,EAASiQ,GAASnO,YAIxB,GADsBW,EAASyD,eAE7B,OAAO,cAAC,EAAD,IAIT,IAAMgI,EAASlL,EAAIgQ,GACnB,IAAK9E,EACH,OAAO,cAACrC,EAAA,EAAD,CAAYC,QAAQ,KAApB,kDAGT,IAAM4K,EAAsB,GAC5BD,EAAmBnT,KAChBiE,QAAO,SAACwL,GAAD,OAAcA,EAASC,WAAaA,KAC3C1N,SAAQ,SAACyN,GACR,IAEMhT,EAFUgT,EAASE,aACRF,EAAS4D,QAEc,qBAA7BD,EAAoB3W,KAC7B2W,EAAoB3W,GAAO,IAE7B2W,EAAoB3W,GAAKsK,KAAK0I,MAGlC,IAOM6D,EAP6B1W,OAAO2W,KAAKH,GAC5CxD,MAAK,SAACtP,EAAGuP,GAAJ,OAAU,IAAI2D,KAAK3D,EAAE4D,MAAM,EAAG,KAAO,IAAID,KAAKlT,EAAEmT,MAAM,EAAG,QAC9D7T,QAAO,SAAC8T,EAAKjX,GAEZ,OADAiX,EAAI3M,KAAKqM,EAAoB3W,IACtBiX,IACN,IAEiD7R,KAAI,SAACoJ,GACzD,IAAI0I,EAAa,EACXC,EAAe3I,EAAMpJ,KAAI,SAAC4N,GAC9B,IAAMvJ,EAAUxG,EAAI+P,EAASoE,WAE7B,OADAF,GAAczN,EAAQvB,MAAQ8K,EAASqE,OAErC,eAAC9D,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,CAAgBhH,UAAU,sBAA1B,SACE,cAACiH,EAAA,EAAD,CAAQ4D,IAAK7N,EAAQpB,QAGvB,cAACsL,EAAA,EAAD,CACEC,QAASnK,EAAQpD,KACjB0N,UAAS,WAAMtK,EAAQvB,MAAd,cAAyB8K,EAASqE,YAP/C,eAA8BrE,EAAS3N,QAarCrF,EAAMuX,eACZ,OACE,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,UACE,cAAC5L,EAAA,EAAD,CAAYnB,MAAO,CAAEgN,UAAW,OAAhC,SAA0CnJ,EAAM,GAAG0E,eACnD,cAACpH,EAAA,EAAD,uCAAoBoL,QAEtB,cAACU,GAAA,EAAD,UACE,cAACxD,EAAA,EAAD,UAAO+C,MAET,cAACU,GAAA,EAAD,UACE,cAACnL,EAAA,EAAD,CAAQC,KAAK,QAAQZ,QAAQ,YAAYjB,MAAM,UAA/C,8BATJ,gBAAyB9K,OAiB7B,OACE,sBAAKyM,UAAU,kBAAf,UACE,cAACiB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY/C,MAAM,UAAU8B,QAAS,kBAAM7C,EAAQO,KAAK,cAAxD,SACE,cAAC,KAAD,MAEF,cAACwB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BoC,EAAO0F,SAAW1F,EAAO2F,YACnD,qBAAKnJ,MAAO,CAAEwJ,SAAU,KACxB,cAACtG,EAAA,EAAD,CAAY/C,MAAM,UAAlB,SACE,cAAC,KAAD,WAKN,sBAAK2B,UAAU,gBAAf,UAEE,eAAC+K,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,cAAC5L,EAAA,EAAD,yCAEF,cAAC8L,GAAA,EAAD,UACE,sBAAKjN,MAAO,CAAEuB,MAAO,QAArB,UACE,eAACJ,EAAA,EAAD,gCAAgBqC,EAAO0F,SAAW1F,EAAO2F,aACzC,eAAChI,EAAA,EAAD,gCAAgBqC,EAAOmF,SACvB,eAACxH,EAAA,EAAD,gCAAgBqC,EAAOuH,SACvB,eAAC5J,EAAA,EAAD,gCAAgBqC,EAAOpL,SACvB,eAAC+I,EAAA,EAAD,gCAAgBqC,EAAOwH,QACvB,eAAC7J,EAAA,EAAD,gCAAgBqC,EAAOyH,QACvB,sBAAKjL,MAAO,CAAEmH,QAAS,QAAvB,UACE,qBAAKnH,MAAO,CAAEwJ,SAAU,KACxB,cAACzH,EAAA,EAAD,CACEX,QAAQ,YACRjB,MAAM,UACN8B,QAAS,kBAAM3M,EAAOkO,OAAOI,gBAAe,IAH9C,qCAaR,uBACA,uBACA,sBAAK5D,MAAO,CAAEmH,QAAS,OAAQE,eAAgB,iBAA/C,UACE,cAAClG,EAAA,EAAD,CAAYC,QAAQ,KAApB,sCACA,cAACW,EAAA,EAAD,CACEX,QAAQ,YACRjB,MAAM,UACN8B,QAAS,WACP7C,EAAQO,KAAR,mBAAyB2I,EAAzB,2BAJJ,6BAUF,uBACC4D,Q,wBC/IHxB,GAAaC,sBAAW,SAAoB/H,EAAO1N,GACvD,OAAO,cAAC0V,GAAA,EAAD,aAAOC,UAAU,KAAK3V,IAAKA,GAAS0N,OA2K9BuK,GAxKU,WACvB,IAAM7X,EAASiQ,GAASnO,YACxB,EAAkCL,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBwS,EAAlB,KACMiC,EAAuB7H,GAASxO,UAAS,SAACsE,GAAD,OAAOA,EAAEmI,OAAOI,kBACzDyH,EAAUzU,iBAAO,MACvB,EAAoCG,mBAAS,IAA7C,mBAAOuU,EAAP,KAAmBC,EAAnB,KACQjD,EAAawD,cAAbxD,SAGF+E,EAFMtV,EAASoD,aAEF7C,CAAIgQ,GAUvB,GATAxP,qBAAU,WACR,GAAKuU,EAAL,CAEwBA,EAAhB3S,GAAR,IAAe4S,EAAf,aAAwBD,EAAxB,IACA9B,EAAc+B,MACb,CAACD,IAGkBtV,EAASyD,eAE7B,OAAO,cAAC,EAAD,IAGT,IAAMoF,EAAgB,SAAC1B,GACrBqM,EAAc,2BACTD,GADQ,mBAEVpM,EAAE4B,OAAOpF,KAAOwD,EAAE4B,OAAOhK,UAIxBmK,EAAQ,uCAAG,WAAO/B,GAAP,SAAAhG,EAAA,6DACfgG,EAAEgC,iBAEFiK,GAAa,GAHE,SAITpT,EAASQ,WAAW,UAAUD,IAAIgQ,GAAUpO,IAAIoR,GAJvC,OAKfH,GAAa,GAEb7V,EAAOkO,OAAOI,gBAAe,GAPd,2CAAH,sDAUd,OACE,eAACd,EAAA,EAAD,CACE2I,YAAU,EACV3L,KAAMsN,EACNvK,QAAS,kBAAMvN,EAAOkO,OAAOI,gBAAe,IAC5C8H,oBAAqBhB,GAJvB,UAME,cAAC3H,EAAA,EAAD,CAAQ/C,MAAO,CAAEgD,SAAU,YAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLhD,MAAM,UACN8B,QAAS,kBAAM3M,EAAOkO,OAAOI,gBAAe,IAC5C,aAAW,QAJb,SAME,cAAC,IAAD,MAEF,cAACzC,EAAA,EAAD,CAAYC,QAAQ,KAAKpB,MAAO,CAAEoD,KAAM,GAAxC,sCAGA,cAACrB,EAAA,EAAD,CAAQgG,WAAS,EAAC5H,MAAM,UAAU8B,QAAS,kBAAMyH,GAAc2B,EAAQxU,UAAvE,2CAMJ,uBAAMmJ,MAAO,CAAEgB,QAAS,aAAe9L,IAAKmW,EAASpK,SAAUA,EAA/D,UACE,cAAC,EAAD,CAAQnB,KAAMnH,IAGd,cAAC2I,EAAA,EAAD,CACE5F,KAAK,WACL5E,MAAOwU,EAAWpC,SAClB1H,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACEqK,UAAQ,EACRjQ,KAAK,YACL5E,MAAOwU,EAAWnC,UAClB3H,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,QACL5E,MAAOwU,EAAWP,MAClBxV,KAAK,QACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,QACL5E,MAAOwU,EAAWlT,MAClB7C,KAAK,QACLiM,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,OACL5E,MAAOwU,EAAWN,KAClBxJ,MAAM,eACNJ,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,IAGZ,uBACA,uBAGA,cAACU,EAAA,EAAD,CACE5F,KAAK,QACL5E,MAAOwU,EAAW3C,MAClBnH,MAAM,eACNjM,KAAK,OACL6L,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EACVZ,MAAO,CAAEuB,MAAO,WAGlB,uBACA,uBAGA,cAACD,EAAA,EAAD,CACE5F,KAAK,OACL5E,MAAOwU,EAAWL,KAClBzJ,MAAM,eACNoK,WAAS,EACTxK,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EACVZ,MAAO,CAAEuB,MAAO,iB,wCClIXgM,GAzCY,WACzB,IAAMC,EAAyBjI,GAASxO,UAAS,SAACL,GAAD,OAAWA,EAAM8M,OAAOG,oBACnErO,EAASiQ,GAASnO,YAChBkR,EAAawD,cAAbxD,SACFlJ,EAAUC,cAChB,EAAkCtI,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBwS,EAAlB,KAEMsC,EAAY,uCAAG,WAAOvO,GAAP,SAAAhG,EAAA,6DACnBgG,EAAEgC,iBACFiK,GAAa,GAFM,kBAIXpT,EAASQ,WAAW,UAAUD,IAAIgQ,GAAUoF,SAJjC,uDAMjB3S,QAAQC,IAAR,MANiB,QAQnB1F,EAAOkO,OAAOG,kBAAiB,GAC/BwH,GAAa,GAEb/L,EAAQO,KAAK,aAXM,yDAAH,sDAclB,OACE,eAACmD,EAAA,EAAD,CAAQhD,KAAM0N,EAAwB3K,QAAS,kBAAMvN,EAAOkO,OAAOG,kBAAiB,IAApF,UACE,cAACgK,GAAA,EAAD,uCACA,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,uHAEF,eAACC,GAAA,EAAD,WACE,cAAC/L,EAAA,EAAD,CAAQ5B,MAAM,UAAU8B,QAAS,kBAAM3M,EAAOkO,OAAOG,kBAAiB,IAAtE,0BAGA,cAAC5B,EAAA,EAAD,CAAQ5B,MAAM,YAAY4H,WAAS,EAAC9F,QAASwL,EAA7C,6BAKF,cAAC,EAAD,CAAQ3N,KAAMnH,Q,2DClDPoV,GAAiB,SAACrS,EAAM5E,GACnC,GAAqB,kBAAVA,EAAoB,MAAM,IAAIkX,UAAJ,UAAiBtS,EAAjB,yBAG1BuS,GAAyB,SAACvS,EAAM5E,GAE3C,GADAiX,GAAerS,EAAM5E,GACjBA,EAAMmF,QAAU,EAAG,MAAM,IAAIiS,WAAJ,UAAkBxS,EAAlB,iCAIlByS,GAAiB,SAACzS,EAAM5E,GACnC,GAAqB,kBAAVA,EAAoB,MAAM,IAAIkX,UAAJ,UAAiBtS,EAAjB,yBC+BxB0S,GAJA,CACbC,eApBqB,SAAC,GAQjB,IAPLpC,EAOI,EAPJA,QACA3D,EAMI,EANJA,SACAmE,EAKI,EALJA,UACAC,EAII,EAJJA,OACAnE,EAGI,EAHJA,aACA+F,EAEI,EAFJA,YACArD,EACI,EADJA,KASA,OAPAgD,GAAuB,UAAWhC,GAClCgC,GAAuB,WAAY3F,GACnC2F,GAAuB,YAAaxB,GDhBA,SAAC/Q,EAAM5E,GAE3C,GADAqX,GAAezS,EAAM5E,GACjBA,GAAS,EAAG,MAAM,IAAIoX,WAAJ,UAAkBxS,EAAlB,iCCetB6S,CAAuB,SAAU7B,GACjCuB,GAAuB,OAAQ1F,GDPK,SAAC7M,EAAM5E,GAC3C,KAAMtB,OAAO2W,KAAKrV,GAAOmF,OAAS,GAChC,MAAM,IAAIiS,WAAJ,UAAkBxS,EAAlB,kCCMR8S,CAAuB,cAAeF,GACtCP,GAAe,OAAQ9C,GAChB,CAAEgB,UAAS3D,WAAUmE,YAAWC,SAAQnE,eAAc+F,cAAarD,U,oBCDtEwD,GAAY,SAAC,GAAyC,IAAvC5K,EAAsC,EAAtCA,MAAO6K,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC9B7P,EAAoB+E,EAApB/E,QAAS4N,EAAW7I,EAAX6I,OACXpX,EAASiQ,GAASnO,YAElBwX,EAAmB,SAAClC,GACxB,OAAOiC,GAAa,SAAC7K,GACnB,OAAOrN,YAAQqN,GAAW,SAAC+K,GACzB,IAAMC,EAAYD,EAAMH,GAAYhC,OAASA,EACzCoC,EAAY,GACdD,EAAME,OAAOL,EAAY,GACzBpZ,EAAOwJ,QAAQ6F,cAAcb,EAAU4K,GAAY5P,UAEnD+P,EAAMH,GAAYhC,OAASoC,SAMnC,OACE,eAAClG,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAgBhH,UAAU,sBAA1B,SACE,cAACiH,EAAA,EAAD,CAAQ4D,IAAK7N,EAAQpB,QAGvB,cAACsL,EAAA,EAAD,CACElH,UAAU,oBACVmH,QAASnK,EAAQpD,KACjB0N,UAAWtK,EAAQ5C,QAAQR,OAG7B,eAACsT,GAAA,EAAD,CAAyBlN,UAAU,sBAAnC,UACE,eAACX,EAAA,EAAD,CAAYW,UAAU,SAAtB,cACIhD,EAAQvB,MADZ,MACsBmP,KAGtB,eAACuC,GAAA,EAAD,CAAa9O,MAAM,UAAU,aAAW,gCAAxC,UACE,cAAC4B,EAAA,EAAD,CAAQE,QAAS,kBAAM2M,EAAiB,IAAxC,eACA,cAAC7M,EAAA,EAAD,CAAQE,QAAS,kBAAM2M,GAAkB,IAAzC,yBAuKKM,GAhKS,WAEtB,IAAM9P,EAAUC,cACV8P,EAAQrD,cACRxT,EAAMP,EAASoD,cACf8I,EAAcsB,GAASxO,UAAS,SAACsE,GAAD,OAAOA,EAAE4I,eACzC3O,EAASiQ,GAASnO,YACxB,EAAkCL,mBAAS,IAA3C,mBAAO+M,EAAP,KAAkB6K,EAAlB,KACA,EAAkD5X,oBAAS,GAA3D,mBAAOqY,EAAP,KAA0BC,EAA1B,KACA,EAAkDtY,oBAAS,GAA3D,mBAAOuY,EAAP,KAA0BC,EAA1B,KAWA,GATAzW,qBAAU,WACR,IAAM0W,EAAiBha,OAAO2W,KAAKlI,EAAYC,eAAezJ,KAAI,SAACgS,GACjE,MAAO,CAAE3N,QAASxG,EAAImU,GAAYC,OAAQ,MAE5CiC,GAAa,SAAC/V,GAAD,6BAAcA,GAAd,aAAuB4W,SACnC,IAGmBzX,EAASyD,eAE7B,OAAO,cAAC,EAAD,IAIT,IAAMgI,EAASlL,EAAI6W,EAAM7G,UACzB,IAAK9E,EACH,OAAO,cAACrC,EAAA,EAAD,CAAYC,QAAQ,KAApB,kDAGT,IAAMqO,EAAa3L,EAAUtL,QAAO,SAACkX,EAAO7L,GAC1C,OAAO6L,EAAQ7L,EAAM6I,OAAS7I,EAAM/E,QAAQvB,QAC3C,GAEGoS,EAAc,kBAAMN,GAAqB,IAGzCO,EAAa,uCAAG,sCAAA1W,EAAA,sDACpBqW,GAAqB,GAGf5T,EAAQ5D,EAAS4D,QACjBsQ,EAAUW,eALI,cAMA9I,GANA,+DAMTD,EANS,SAOR6I,QAAU,GAPF,wDAWZ4B,EAAclQ,MAAMC,KAAK,CAAEpC,OAAQ4H,EAAM6I,SAAU,SAACmD,EAAGrR,GAC3D,OAAOsR,OACJtE,IAAIhN,EAAI,EAAG,UACXuR,OAAO,iBACTvX,QAAO,SAACwX,EAAKC,GACd,IAAMC,EAAcJ,KAAOG,GAAKE,OAGhC,OAFKH,EAAIE,KAAcF,EAAIE,GAAe,IAC1CF,EAAIE,GAAavQ,KAAKmQ,KAAOG,GAAKG,SAC3BJ,IACN,IAEHrU,EAAMzB,IACJnC,EAASQ,WAAW,YAAYD,MAChC+X,GAAOhC,eAAe,CACpBpC,UACA3D,SAAU9E,EAAO9I,GACjB+R,UAAW5I,EAAM/E,QAAQpE,GACzBgS,OAAQ7I,EAAM6I,OACdnE,aAAc2B,GAAW,IAAIkC,MAC7BkC,YAAaA,EACbrD,KAAM,MA/BQ,gKAoCdtP,EAAM2U,SApCQ,QAqCpBhb,EAAOwJ,QAAQ8F,wBAvCgBxF,EAAQO,KAAR,mBAAyB6D,EAAO9I,KAE3C,gEAAH,qDAyCnB,OACE,sBAAKoH,UAAU,kBAAf,UAEE,cAACiB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAY/C,MAAM,UAAU8B,QA/CZ,kBAAM7C,EAAQO,KAAR,mBAAyB6D,EAAO9I,GAAhC,2BA+CtB,SACE,cAAC,KAAD,MAEF,eAACyG,EAAA,EAAD,CAAYC,QAAQ,KAApB,uCAAgCoC,EAAO0F,SAAW1F,EAAO2F,UAAzD,YAIJ,qBAAKrH,UAAU,gBAAf,SAEE,cAAC2H,EAAA,EAAD,UACG3F,EAAUrJ,KAAI,SAACoJ,EAAOW,GAAR,OACb,cAAC,GAAD,CAAuBX,MAAOA,EAAO6K,WAAYlK,EAAOmK,aAAcA,GAAtDnK,UAMtB,cAACzB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,eAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAApB,qCAA8BqO,EAA9B,aACA,qBAAKzP,MAAO,CAAEwJ,SAAU,KACxB,cAACtG,EAAA,EAAD,CACE/C,MAAM,UACN+B,SAAUuN,GAAc,EACxBxN,QAAS,kBAAMoN,GAAqB,IAHtC,SAKE,cAAC,KAAD,WAMN,eAACvM,EAAA,EAAD,CACE2I,YAAU,EACV3L,KAAMsP,EACNvM,QAAS8M,EACTY,UAAW1G,SAAS2G,eAAe,gBAJrC,UAME,eAAC7C,GAAA,EAAD,CAAa9K,QAAS8M,EAAtB,2CAAyCF,EAAzC,aACA,cAAC7B,GAAA,EAAD,CAAe6C,UAAQ,EAAvB,SACGnB,EACC,cAAC,EAAD,IAEA,cAAC7F,EAAA,EAAD,UACG3F,EACEjH,QAAO,SAACgH,GAAD,OAAWA,EAAM6I,OAAS,KACjCjS,KAAI,SAACoJ,EAAOW,GACX,IAAQ1F,EAAoB+E,EAApB/E,QAAS4N,EAAW7I,EAAX6I,OAEjB,OACE,eAAC9D,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAgBhH,UAAU,sBAA1B,SACE,cAACiH,EAAA,EAAD,CAAQ4D,IAAK7N,EAAQpB,QAEvB,cAACsL,EAAA,EAAD,CACEC,QAAO,UAAKzE,EAAQ,EAAb,aAAmB1F,EAAQpD,MAClC0N,UAAS,WAAMtK,EAAQvB,MAAd,cAAyBmP,OANvBlI,UAc3B,eAACsJ,GAAA,EAAD,WACE,cAAC/L,EAAA,EAAD,CAAQgG,WAAS,EAAC9F,QAAS0N,EAAaxP,MAAM,YAA9C,0BAGA,cAAC4B,EAAA,EAAD,CAAQE,QAAS2N,EAAezP,MAAM,UAAtC,oC,wCCvMJuQ,GAAsB,SAAC,GAA4B,IAA1B/V,EAAyB,EAAzBA,KAAM6J,EAAmB,EAAnBA,MAAOxE,EAAY,EAAZA,MAClCkE,EAA8CvJ,EAA9CuJ,cAAeS,EAA+BhK,EAA/BgK,cACjB7F,EADgDnE,EAAhB8D,YACV+F,GAE5B,OACE,eAACoE,EAAA,EAAD,CAAUC,QAAM,EAAC7I,MAAOA,EAAmBiC,QAAS0C,EAAc7F,GAAlE,UACE,cAAC6R,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAUzQ,MAAM,UAAU0Q,QAAS3M,EAAc5I,eAAewD,EAAQpE,QAE1E,cAACoO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQ4D,IAAK7N,EAAQpB,QAEvB,cAACsL,EAAA,EAAD,CAAcC,QAASnK,EAAQpD,SAPG8I,IAsGzBsM,GA1FK,WAClB,IAAM1R,EAAUC,cACV/J,EAASiQ,GAASnO,YAClB0H,EAAU/G,EAASmD,cAAc,WACjC+I,EAAcsB,GAASxO,UAAS,SAACsE,GAAD,OAAOA,EAAE4I,eACzCkL,EAAQrD,cACRxT,EAAMP,EAASoD,cAIrB,GADsBpD,EAASyD,eAE7B,OAAO,cAAC,EAAD,IAIT,IAAMgI,EAASlL,EAAI6W,EAAM7G,UACzB,IAAK9E,EACH,OAAO,cAACrC,EAAA,EAAD,CAAYC,QAAQ,KAApB,kDAIT,IAAM2P,EAAsBjS,EAAQlG,KAAKiE,QAAO,SAACsB,GAC/C,OAAOA,EAAEzC,KAAKgJ,cAAchF,SAASuE,EAAYR,gBAanD,OACE,sBAAK3B,UAAU,kBAAf,UACE,cAACiB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACE/C,MAAM,UACN8B,QAAS,WAXjB3M,EAAOwJ,QAAQ2F,eAAe,IAC9BnP,EAAOwJ,QAAQ8F,wBACfxF,EAAQO,KAAR,mBAAyB6D,EAAO9I,MAO1B,SAME,cAAC,KAAD,MAEF,cAACyG,EAAA,EAAD,CAAYC,QAAQ,KAApB,sCACA,cAACwG,GAAD,CACEnE,YAAaQ,EAAYR,YACzB9B,SAAU,SAACzC,GAAD,OAAO5J,EAAOwJ,QAAQ2F,eAAevF,EAAE4B,OAAOhK,UAE1D,cAACoM,EAAA,EAAD,CACE/C,MAAM,UACN8B,QAAS,WA5BjB7C,EAAQO,KAAR,mBAAyB6D,EAAO9I,GAAhC,uBA0BM,SAME,cAAC,KAAD,MAGF,cAACqH,EAAA,EAAD,CAAQE,QAAS3M,EAAOwJ,QAAQ8F,sBAAuBzE,MAAM,YAA7D,2CAMJ,qBAAK2B,UAAU,gBAAf,SACE,cAAC,KAAD,UACG,gBAAGmF,EAAH,EAAGA,OAAQ1F,EAAX,EAAWA,MAAX,OACC,cAAC,KAAD,CACEyP,SAAU,CACR9M,cAAeD,EAAYC,cAC3BS,cAAe,SAAC7F,GAAD,OAAa,kBAAMxJ,EAAOwJ,QAAQ6F,cAAc7F,KAC/DL,YAAasS,GAEf9J,OAAQA,EACR1F,MAAOA,EACP0P,SAAU,GACVC,UAAWH,EAAoB9U,OATjC,SAWGyU,c,oBCjHTS,GAAU,CACd,CAAE5P,MAAO,IAAK6P,MAAO,UAAWC,WAAY,gBAC5C,CAAE9P,MAAO,GAAK6P,MAAO,SAAWC,WAAY,eAAM9b,KAAM,WA4C3C+b,GAzCO,WACpB,IAAMhc,EAASiQ,GAASnO,YAClBma,EAAYxZ,EAASmD,cAAc,aACnC5C,EAAMP,EAASoD,cAIrB,GADsBpD,EAASyD,eAE7B,OAAO,cAAC,EAAD,IAGT,IAAMgW,EAAOD,EAAU3Y,KAAK6B,KAAI,SAACI,GAC/B,IAAMiE,EAAUxG,EAAIuC,EAAK4R,WAEzB,MAAO,CACL/R,GAAIG,EAAKH,GACToE,QAASA,EAAQpD,KACjBgR,OAAQ7R,EAAK6R,OACbnP,MAAOuB,EAAQvB,UAInB,OACE,qCACE,sBAAKuE,UAAU,kBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,KAAD,CAAU0P,KAAMA,EAAML,QAASA,GAASM,YAAU,EAACC,SAAU,MAE/D,cAAC,GAAD,OAEF,cAACC,GAAA,EAAD,CACE7P,UAAU,mBACV3B,MAAM,UACN8B,QAAS,kBAAM3M,EAAOwP,wBAAuB,IAH/C,SAKE,cAAC,KAAD,U,sCChCF4F,GAAaC,sBAAW,SAAoB/H,EAAO1N,GACvD,OAAO,cAAC0V,GAAA,EAAD,aAAOC,UAAU,KAAK3V,IAAKA,GAAS0N,OAGvCkI,GAAoB,CACxB2B,UAAW,GACXC,OAAQ,KA+FKkF,GA5FY,WACzB,IAAMtc,EAASiQ,GAASnO,YACxB,EAAkCL,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBwS,EAAlB,KACMhH,EAAqBoB,GAASxO,UAAS,SAACL,GAAD,OAAWA,EAAMyN,sBACxDrF,EAAU/G,EAASmD,cAAc,WAEjCmQ,EAAUzU,iBAAO,MACvB,EAAoCG,mBAAS+T,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEM3K,EAAgB,SAAC1B,GACrBqM,EAAc,2BACTD,GADQ,mBAEVpM,EAAE4B,OAAOpF,KAAOwD,EAAE4B,OAAOhK,UAIxBmK,EAAQ,uCAAG,WAAO/B,GAAP,SAAAhG,EAAA,6DACfgG,EAAEgC,iBAEFiK,GAAa,GAHE,SAITpT,EAASQ,WAAW,aAAaiT,IAAjC,2BACDF,GADC,IAEJoB,OAAQmF,OAAOC,SAASxG,EAAWoB,OAAQ,OAN9B,OAQfnB,EAAcT,IACdK,GAAa,GAEb7V,EAAOwP,wBAAuB,GAXf,2CAAH,sDAcd,OACE,eAAChC,EAAA,EAAD,CACE2I,YAAU,EACV3L,KAAMqE,EAAmBC,KACzBvB,QAAS,kBAAMvN,EAAOwP,wBAAuB,IAC7C4G,oBAAqBhB,GAJvB,UAME,cAAC3H,EAAA,EAAD,CAAQ/C,MAAO,CAAEgD,SAAU,YAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLhD,MAAM,UACN8B,QAAS,kBAAM3M,EAAOwP,wBAAuB,IAC7C,aAAW,QAJb,SAME,cAAC,IAAD,MAEF,cAAC3D,EAAA,EAAD,CAAYC,QAAQ,KAAKpB,MAAO,CAAEoD,KAAM,GAAxC,sCAGA,cAACrB,EAAA,EAAD,CAAQgG,WAAS,EAAC5H,MAAM,UAAU8B,QAAS,kBAAMyH,GAAc2B,EAAQxU,UAAvE,+BAMJ,uBAAMmJ,MAAO,CAAEgB,QAAS,aAAe9L,IAAKmW,EAASpK,SAAUA,EAA/D,UACE,cAAC,EAAD,CAAQnB,KAAMnH,IAGd,eAACoZ,GAAA,EAAD,CAAapG,UAAQ,EAACvK,QAAQ,WAAWpB,MAAO,CAAEuB,MAAO,QAAzD,UACE,cAACyQ,GAAA,EAAD,2BACA,cAACC,GAAA,EAAD,CAAQvW,KAAK,YAAY5E,MAAOwU,EAAWmB,UAAW9K,SAAUf,EAAhE,SACG9B,EAAQlG,KAAK6B,KAAI,SAACqE,GAAD,OAChB,cAACoT,GAAA,EAAD,CAA2Bpb,MAAOgI,EAAQpE,GAA1C,SACGoE,EAAQpD,MADIoD,EAAQpE,YAO7B,uBACA,uBAGA,cAAC4G,EAAA,EAAD,CACEqK,UAAQ,EACR7U,MAAOwU,EAAWoB,OAClBhR,KAAK,SACL8F,MAAM,eACNJ,QAAQ,WACR7L,KAAK,SACLyK,MAAO,CAAEuB,MAAO,QAChB4G,WAAY,CAAEgK,IAAK,GACnB1Q,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,WC5CLwR,GAzDU,SAAC,GAAc,IAAZzX,EAAW,EAAXA,KAC1B,EAA8B5D,mBAAS,IAAvC,mBAAO8Z,EAAP,KAAgBwB,EAAhB,KAeMC,EAAU9c,OAAOK,QAAQ8E,GAAMF,KAAI,YAAoC,IAAD,mBAAjC8X,EAAiC,KAArBC,EAAqB,KACpEC,EAAQjd,OAAOK,QAAQ2c,GAAiB/X,KAAI,YAAgC,IAAD,mBAA7B8N,EAA6B,KAAfmK,EAAe,KAC/E,OACE,eAACzF,GAAA,EAAD,WACE,cAAC9L,EAAA,EAAD,UAAaoH,IACb,cAACkB,EAAA,EAAD,UACGiJ,EAAUjY,KAAI,SAAC4N,GAAD,OACb,eAACO,EAAA,EAAD,CAA4BC,QAAM,EAAC5G,SApBzBnL,EAoB+CuR,EAAS3N,GApB9C,WAC9B,IAAMiY,EAAe9B,EAAQ+B,QAAQ9b,GAC/B+b,EAAU,aAAOhC,IAED,IAAlB8B,EACFE,EAAWlT,KAAK7I,GAEhB+b,EAAW9D,OAAO4D,EAAc,GAGlCN,EAAWQ,KAUD,UACE,cAAClC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAUC,SAA2C,IAAlCA,EAAQ+B,QAAQvK,EAAS3N,QAE9C,cAACsO,EAAA,EAAD,CAAcC,QAASZ,EAASvJ,QAASsK,UAAS,YAAOf,EAASqE,YAJrDrE,EAAS3N,IApBf,IAAC5D,SAgBOyR,MAgB3B,OACE,eAACsE,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,cAAC5L,EAAA,EAAD,UAAaoR,MAEdE,EACD,cAACvF,GAAA,EAAD,UACE,cAACnL,EAAA,EAAD,CAAQX,QAAQ,YAAYY,KAAK,QAAQ7B,MAAM,UAA/C,gDANYoS,MAcpB,OAAuB,IAAnBD,EAAQrW,OACH,cAACkF,EAAA,EAAD,+DAGFmR,GCuDMQ,GAhHM,WACnB,IAAMzK,EAAWtQ,EAASmD,cAAc,YAClC5C,EAAMP,EAASoD,cAEf4X,EAAYjD,OAASM,QAAU,EACrC,EAAsCrZ,mBAASgc,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAWpD,OAASK,OAC1B,EAAoCpZ,mBAASmc,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAIA,GADsBrb,EAASyD,eAE7B,OAAO,cAAC,EAAD,IAmDT,IAhDA,IAsBM6X,EAAY,SAAC/G,EAAKjX,GACtB,OAAOiX,EAAI9T,QAAO,SAACwX,EAAKC,GACtB,OAAKA,EAAI5a,IAIJ2a,EAAIC,EAAI5a,MACX2a,EAAIC,EAAI5a,IAAQ,IAElB2a,EAAIC,EAAI5a,IAAMsK,KAAKsQ,GACZD,GAPEA,IAQR,KAGCnM,EAAQ,SAACyP,GACb,OAAO9d,OAAO2W,KAAKmH,GAChB9K,OACAhQ,QAAO,SAACC,EAAKpD,GAEZ,OADAoD,EAAIpD,GAAOie,EAAUje,GACdoD,IACN,KAGD8a,EAAgB,GAEhBC,EAAoB3P,EAAMwP,EA/CNhL,EAASzP,KAChCiE,QAAO,SAACwL,GACP,IAAMoL,EAAepL,EAASiG,YAAcjG,EAASiG,YAAY6E,GAAc,GAE/E,SAAIH,IAAeS,EAAa/T,SAASsT,OAG1CvY,KAAI,SAAC4N,GACJ,IAAM7E,EAASlL,EAAI+P,EAASC,UACtBxJ,EAAUxG,EAAI+P,EAASoE,WAE7B,MAAO,CACL/R,GAAI2N,EAAS3N,GACb8I,OAAQA,EAAO2F,UACfrK,QAASA,EAAQpD,KACjBgR,OAAQrE,EAASqE,OACjBnP,MAAO8K,EAASqE,OAAS5N,EAAQvB,MACjC4M,KAAM9B,EAASE,aACf0C,KAAM5C,EAAS4C,SA6BwC,WAC7D,MAA2BzV,OAAOK,QAAQ2d,GAA1C,eAA8D,CAAzD,0BAAOne,EAAP,KACGqe,EAAkBL,EADrB,KACsC,QACzCE,EAAcle,GAAOwO,EAAM6P,GAG7B,OACE,sBAAK5R,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,iEACA,sBAAK9B,MAAO,CAAEmH,QAAS,OAAQE,eAAgB,gBAA/C,UACE,eAAC0K,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,qBACA,cAACC,GAAA,EAAD,CACEnb,MAAOkc,EACPrR,SAAU,SAACzC,GAAD,OAAO+T,EAAepB,OAAOC,SAAS5S,EAAE4B,OAAOhK,SAF3D,SAIG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAI2D,KAAI,SAAC2V,GAAD,OAC3C,cAAC8B,GAAA,EAAD,CAAsBpb,MAAOsZ,EAA7B,SACGA,GADYA,WAMrB,eAAC2B,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,qBACA,cAACC,GAAA,EAAD,CACEnb,MAAOqc,EACPxR,SAAU,SAACzC,GAAD,OAAOkU,EAAcvB,OAAOC,SAAS5S,EAAE4B,OAAOhK,SAF1D,SAIGsH,MAAMC,KAAK,CAAEpC,OAAQiX,EAAW,OAAQ,SAACpc,EAAOzB,GAAR,OAAyBA,EAAM,QACrEse,UACAlZ,KAAI,SAAC0V,GAAD,OACH,cAAC+B,GAAA,EAAD,CAAqBpb,MAAOqZ,EAA5B,SACGA,GADYA,cAOzB,uBACA,cAAC,GAAD,CAAkBxV,KAAM4Y,OAG1B,cAAC,GAAD,QCjGA7I,GAAaC,sBAAW,SAAoB/H,EAAO1N,GACvD,OAAO,cAAC0V,GAAA,EAAD,aAAOC,UAAU,KAAK3V,IAAKA,GAAS0N,OAGvCkI,GAAoB,CACxBxC,SAAU,GACVmE,UAAW,GACXC,OAAQ,IACRnE,aAAc2B,GAAW,IAAIkC,MAC7BnB,KAAM,IA0IO2I,GAvIW,WACxB,IAAMte,EAASiQ,GAASnO,YACxB,EAAkCL,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBwS,EAAlB,KACM9G,EAAoBkB,GAASxO,UAAS,SAACL,GAAD,OAAWA,EAAM2N,qBACvDb,EAASzL,EAASmD,cAAc,UAChC4D,EAAU/G,EAASmD,cAAc,WAEjCmQ,EAAUzU,iBAAO,MACvB,EAAoCG,mBAAS+T,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEM3K,EAAgB,SAAC1B,GACrBqM,EAAc,2BACTD,GADQ,mBAEVpM,EAAE4B,OAAOpF,KAAOwD,EAAE4B,OAAOhK,UAIxBmK,EAAQ,uCAAG,WAAO/B,GAAP,SAAAhG,EAAA,6DACfgG,EAAEgC,iBAEFiK,GAAa,GAHE,SAITpT,EAASQ,WAAW,YAAYiT,IAAhC,2BACDF,GADC,IAEJoB,OAAQmF,OAAOC,SAASxG,EAAWoB,OAAQ,OAN9B,OAQfnB,EAAcT,IACdK,GAAa,GAEb7V,EAAOyP,uBAAsB,GAXd,2CAAH,sDAcd,OACE,eAACjC,EAAA,EAAD,CACE2I,YAAU,EACV3L,KAAMuE,EAAkBD,KACxBvB,QAAS,kBAAMvN,EAAOyP,uBAAsB,IAC5C2G,oBAAqBhB,GAJvB,UAME,cAAC3H,EAAA,EAAD,CAAQ/C,MAAO,CAAEgD,SAAU,YAA3B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLhD,MAAM,UACN8B,QAAS,kBAAM3M,EAAOyP,uBAAsB,IAC5C,aAAW,QAJb,SAME,cAAC,IAAD,MAEF,cAAC5D,EAAA,EAAD,CAAYC,QAAQ,KAAKpB,MAAO,CAAEoD,KAAM,GAAxC,sCAGA,cAACrB,EAAA,EAAD,CAAQgG,WAAS,EAAC5H,MAAM,UAAU8B,QAAS,kBAAMyH,GAAc2B,EAAQxU,UAAvE,+BAMJ,uBAAMmJ,MAAO,CAAEgB,QAAS,aAAe9L,IAAKmW,EAASpK,SAAUA,EAA/D,UACE,cAAC,EAAD,CAAQnB,KAAMnH,IAGd,eAACoZ,GAAA,EAAD,CAAapG,UAAQ,EAACvK,QAAQ,WAAWpB,MAAO,CAAEuB,MAAO,QAAzD,UACE,cAACyQ,GAAA,EAAD,CAAYtQ,QAAM,EAAlB,gCACA,cAACuQ,GAAA,EAAD,CAAQvW,KAAK,WAAW5E,MAAOwU,EAAWhD,SAAU3G,SAAUf,EAA9D,SACG4C,EAAO5K,KAAK6B,KAAI,SAAC+I,GAAD,OACf,cAAC0O,GAAA,EAAD,CAA0Bpb,MAAO0M,EAAO9I,GAAxC,SACG8I,EAAO0F,SAAW1F,EAAO2F,WADb3F,EAAO9I,YAM5B,uBACA,uBAGA,eAACqX,GAAA,EAAD,CAAapG,UAAQ,EAACvK,QAAQ,WAAWpB,MAAO,CAAEuB,MAAO,QAAzD,UACE,cAACyQ,GAAA,EAAD,CAAYtQ,QAAM,EAAlB,0BACA,cAACuQ,GAAA,EAAD,CAAQvW,KAAK,YAAY5E,MAAOwU,EAAWmB,UAAW9K,SAAUf,EAAhE,SACG9B,EAAQlG,KAAK6B,KAAI,SAACqE,GAAD,OAChB,cAACoT,GAAA,EAAD,CAA2Bpb,MAAOgI,EAAQpE,GAA1C,SACGoE,EAAQpD,MADIoD,EAAQpE,YAM7B,uBACA,uBAGA,cAAC4G,EAAA,EAAD,CACEqK,UAAQ,EACRjQ,KAAK,SACL5E,MAAOwU,EAAWoB,OAClBlL,MAAM,eACNJ,QAAQ,WACR7L,KAAK,SACL4S,WAAY,CAAEgK,IAAK,GACnB1Q,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EACVZ,MAAO,CAAEuB,MAAO,UAElB,uBACA,uBAGA,cAACD,EAAA,EAAD,CACEqK,UAAQ,EACRjQ,KAAK,eACL5E,MAAOwU,EAAW/C,aAClB/G,MAAM,2BACNjM,KAAK,OACL6L,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EACVZ,MAAO,CAAEuB,MAAO,WAElB,uBACA,uBAGA,cAACD,EAAA,EAAD,CACE5F,KAAK,OACL5E,MAAOwU,EAAWL,KAClBzJ,MAAM,eACNoK,WAAS,EACTxK,QAAQ,WACRK,gBAAiB,CAAEC,QAAQ,GAC3BC,SAAUf,EACVZ,MAAO,CAAEuB,MAAO,iB,8BC7FXsS,GA5DY,WACzB,IAAMve,EAASiQ,GAASnO,YAClBc,EAAOH,EAAShB,UAAS,SAACL,GAAD,OAAWA,EAAMwB,QAIhD,OAHqBA,EAAKoB,gBAAkB4Q,GAAW,IAAIkC,MAKvD,eAAC0H,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAAC5S,EAAA,EAAD,CAAYC,QAAQ,KAAK4S,UAAU,KAAnC,8DAGA,uBAJF,uCAKS9b,EAAKoB,kBAEd,cAAC2a,GAAA,EAAD,UACE,cAAClS,EAAA,EAAD,CAAQ5B,MAAM,UAAd,2CAQN,eAAC2T,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAAC5S,EAAA,EAAD,CAAYC,QAAQ,KAAK4S,UAAU,KAAnC,gEAIF,eAACC,GAAA,EAAD,WACE,cAAClS,EAAA,EAAD,CACE5B,MAAM,UACN8B,QAAO,sBAAE,8BAAA/I,EAAA,6DAEDgb,EAAQnc,EAASV,SAAS8c,YAAYC,cAAc,SAFnD,SAKcF,EAAM,CACzB/b,IAAKD,EAAKC,IACVC,MAAOF,EAAKE,MACZic,cAAeC,OAAOC,SAASC,KAC/BC,eAAgBH,OAAOC,SAASC,OAT3B,OAKDE,EALC,OAaP7K,SAAS8K,MAAMD,EAAO/Z,KAAKia,WAbpB,2CAFX,0BAoBA,cAAC7S,EAAA,EAAD,CAAQG,UAAQ,EAAC/B,MAAM,UAAU8B,QAAS,kBAAM3M,EAAO0P,4BAA2B,IAAlF,6CCgEO6P,GAzHH,WACV,OACE,qCACE,qBAAK7U,MAAO,CAAEmH,QAAS,OAAQE,eAAgB,iBAA/C,SACE,cAAClG,EAAA,EAAD,CAAYC,QAAQ,KAApB,wCAEF,uBACA,eAACyL,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,2DAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,oWAOJ,eAAC0L,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,kDAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,mNAMJ,eAAC0L,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,oEAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,gFAIJ,eAAC0L,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,kDAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,wIAIJ,eAAC0L,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,2DAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,kJAIJ,eAAC0L,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,wGAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,sOAMJ,eAAC0L,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,2DAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,uFAIJ,eAAC0L,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZ,gBAAc,kBACdrS,GAAG,iBAHL,SAKE,cAACyG,EAAA,EAAD,iEAEF,cAAC8L,GAAA,EAAD,UACE,cAAC9L,EAAA,EAAD,oICvDK2T,GAjDK,WAClB,IAAM5c,EAAOH,EAAShB,UAAS,SAACL,GAAD,OAAWA,EAAMwB,QAC1C6c,EAAe7K,GAAW,IAAIkC,KAAKlU,EAAKG,eAE9C,OACE,sBAAKyJ,UAAU,kBAAf,UACE,cAACiB,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAApB,oEACA,qBAAKpB,MAAO,CAAEwJ,SAAU,UAG5B,sBAAK1H,UAAU,gBAAf,UAEE,eAACgS,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,WACE,cAAC5S,EAAA,EAAD,CAAYC,QAAQ,KAAK4S,UAAU,KAAnC,sCAGA,uBACA,eAAC7S,EAAA,EAAD,4CAAkBjJ,EAAKE,SACvB,eAAC+I,EAAA,EAAD,4CACQ4T,EACN,6BAGJ,eAACd,GAAA,EAAD,WACE,cAAClS,EAAA,EAAD,CAAQ5B,MAAM,UAAd,0BACA,cAAC4B,EAAA,EAAD,CAAQ5B,MAAM,UAAU8B,QAASlK,EAAS6B,OAA1C,gCAKJ,uBAGA,cAAC,GAAD,IACA,uBACA,uBAGA,cAAC,GAAD,IACA,0BAEF,cAAC,GAAD,QC7CA8Q,GAAaC,sBAAW,SAAoB/H,EAAO1N,GACvD,OAAO,cAAC0V,GAAA,EAAD,aAAOC,UAAU,KAAK3V,IAAKA,GAAS0N,OA+D9BoS,GA5DgB,WAC7B,IAAMhQ,EAA6BO,GAASxO,UAC1C,SAACL,GAAD,OAAWA,EAAM4N,uBAAuBF,QAGpC9O,EAASiQ,GAASnO,YAExB,EAAoCL,oBAAS,GAA7C,mBAAOke,EAAP,KAAmBC,EAAnB,KAUA,OACE,eAACpS,EAAA,EAAD,CACE2I,YAAU,EACV3L,KAAMkF,EACNnC,QAAS,kBAAMvN,EAAO0P,4BAA2B,IACjD0G,oBAAqBhB,GAJvB,UAME,cAAC3H,EAAA,EAAD,CAAQ/C,MAAO,CAAEgD,SAAU,YAA3B,SACE,cAACC,EAAA,EAAD,UACE,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,KAAKpB,MAAO,CAAEoD,KAAM,GAAxC,0CAMJ,eAACwK,GAAA,EAAD,CAAeuH,SAvBE,SAACrP,GACpB,IAAMhF,EAASgF,EAAMhF,OAEjBA,EAAOsU,aAAetU,EAAOuU,YAAcvU,EAAOwU,cACpDJ,GAAc,IAmBd,UACE,cAACrH,GAAA,EAAD,uFACA,cAACA,GAAA,EAAD,uFACA,cAACA,GAAA,EAAD,uFACA,cAACA,GAAA,EAAD,uFACA,cAACA,GAAA,EAAD,4kHAIF,cAACC,GAAA,EAAD,UAEE,cAAC/L,EAAA,EAAD,CACEG,UAAW+S,EACXjT,KAAK,QACLZ,QAAQ,YACRjB,MAAM,UACN8B,QAAS,WACP3M,EAAO0P,4BAA2B,GAClCkQ,GAAc,IAPlB,4CC2BOK,OA1Df,WAGE,OAFAxW,IAGE,qBAAKrE,GAAG,eAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8a,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAAlB,SACE,cAAC,EAAD,MAGF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBAAlB,UACE,cAAC5J,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,cAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,sCAAlB,SACE,cAAC,GAAD,MAGF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,0CAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAUC,GAAG,iB,0BC5ErBC,EAASC,OACP,cAAC,KAAD,CAAeC,SAAS,gBAAxB,SACE,cAAC,EAASxf,SAAV,UACE,cAAC,GAASA,SAAV,UACE,cAAC,GAAD,UAINwT,SAAS2G,eAAe,W","file":"static/js/main.32007fe4.chunk.js","sourcesContent":["import { createContext, useContext, useReducer, useRef } from 'react';\nimport { createContext as createSelectorContext, useContextSelector } from 'use-context-selector';\nimport { produce } from 'immer';\n\nconst createAction = (ref, dispatch, actions) => {\n  for (const [key, action] of Object.entries(actions)) {\n    const type = Object.prototype.toString.call(action);\n\n    if (type === '[object Function]') {\n      ref[key] = (...param) => dispatch(action(...param));\n    } else if (type === '[object Object]') {\n      ref[key] = {};\n      createAction(ref[key], dispatch, action);\n    } else {\n      throw new Error(\n        `Unexpected action '${key}' (${type}). Only accpect types object and function.`\n      );\n    }\n  }\n};\n\n/**\n * createStore\n * @param {object} initState\n * @param {object} actions\n * @returns\n */\nconst createStore = (initState = {}, actions = {}) => {\n  // state and dispatch contexts\n  const StateContext = createSelectorContext();\n  const DispatchContext = createContext();\n  const ActionContext = createContext();\n\n  // Store Provider\n  const Provider = ({ children, initState: _initState = initState }) => {\n    const [state, dispatch] = useReducer(produce, _initState);\n\n    // action ref\n    const actionRef = useRef(null);\n    if (actionRef.current === null) {\n      actionRef.current = {};\n      createAction(actionRef.current, dispatch, actions);\n    }\n\n    return (\n      <StateContext.Provider value={state}>\n        <DispatchContext.Provider value={dispatch}>\n          <ActionContext.Provider value={actionRef.current}>{children}</ActionContext.Provider>\n        </DispatchContext.Provider>\n      </StateContext.Provider>\n    );\n  };\n\n  return {\n    Provider,\n    useState: (selector = (state) => state) => useContextSelector(StateContext, selector),\n    useDispatch: () => useContext(DispatchContext),\n    useAction: () => useContext(ActionContext),\n  };\n};\n\nexport default createStore;\n","import { useEffect } from 'react';\nimport createStore from '../utils/createStore';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\nimport 'firebase/analytics';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: 'AIzaSyB0K7kobBNLcK3zqbuRxFS8epP6KtvLns0',\n  authDomain: 'reminder-app-95837.firebaseapp.com',\n  projectId: 'reminder-app-95837',\n  storageBucket: 'reminder-app-95837.appspot.com',\n  messagingSenderId: '405021844080',\n  appId: '1:405021844080:web:b7278fab45891c9b8c4ab5',\n  measurementId: 'G-0DTTR6ZL70',\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst collections = ['client', 'product', 'inventory', 'purchase'];\nconst Firebase = createStore({\n  isInitializing: true,\n  isLogin: false,\n  user: {\n    uid: '',\n    email: '',\n    creationTime: '',\n  },\n  doc: {},\n  collection: collections.reduce((obj, collectName) => {\n    obj[collectName] = { isLoading: true, list: [] };\n    return obj;\n  }, {}),\n});\n\n// 1. Subscribe Firebase Auth State Changed\nconst useSubscribeAuthStateChanged = () => {\n  const dispatch = Firebase.useDispatch();\n  useEffect(() => {\n    let isMounted = true;\n\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (!isMounted) return;\n\n      const idTokenResult = await user?.getIdTokenResult();\n\n      const isLogin = !!user;\n      dispatch((state) => {\n        state.isInitializing = false;\n        state.isLogin = isLogin;\n        state.user.uid = isLogin ? user.uid : '';\n        state.user.email = isLogin ? user.email : '';\n        state.user.creationTime = isLogin ? user.metadata?.creationTime : '';\n        state.user.expirationDate = idTokenResult?.claims?.expiration_date;\n      });\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  }, [dispatch]);\n};\n\n// 2. useSubscribeCollection Hook\nconst useSubscribeCollection = (collectionName) => {\n  const isLogin = Firebase.useState((state) => state.isLogin);\n  const uid = Firebase.useState((state) => state.user.uid);\n  const dispatch = Firebase.useDispatch();\n\n  useEffect(() => {\n    let isMounted = true;\n    if (!isLogin) return;\n\n    dispatch((state) => {\n      state.collection[collectionName].isLoading = true;\n    });\n\n    firebase\n      .firestore()\n      .collection('user')\n      .doc(uid)\n      .collection(collectionName)\n      .onSnapshot(\n        // got snapshot\n        (snap) => {\n          if (!isMounted) return;\n\n          dispatch((state) => {\n            // create list\n            const list = snap.docs.map((doc) => ({\n              id: doc.id,\n              ...doc.data(),\n            }));\n\n            // set collection list\n            state.collection[collectionName] = { isLoading: false, list };\n\n            // add item to the doc\n            list.forEach((item) => {\n              state.doc[item.id] = item;\n            });\n          });\n        },\n\n        // error handle\n        (error) => {\n          console.log(error.message);\n        }\n      );\n\n    return () => {\n      isMounted = false;\n    };\n  }, [dispatch, uid, isLogin, collectionName]);\n};\n\n// 3. useCollection\nconst useCollection = (collectionName) => {\n  return Firebase.useState((state) => state.collection[collectionName]);\n};\n\n// 4. useDocument: return a function to get the document\nconst useDocument = () => {\n  const documents = Firebase.useState((s) => s.doc);\n  return (id) => {\n    if (!documents.hasOwnProperty(id)) {\n      console.warn(`document '${id}' does not exist`);\n    }\n    return documents[id];\n  };\n};\n\n/**\n * 5. useIsLoading\n * @returns {boolean} isLoading\n */\nconst useIsLoading = () => {\n  const collections = Firebase.useState((s) => s.collection);\n\n  let isLoading = false;\n  for (const name in collections) {\n    isLoading |= collections[name].isLoading;\n  }\n\n  return isLoading;\n};\n\n// authentication\nFirebase.useSubscribeAuthStateChanged = useSubscribeAuthStateChanged;\nFirebase.login = (email, password) => firebase.auth().signInWithEmailAndPassword(email, password);\nFirebase.logout = () => firebase.auth().signOut();\nFirebase.signup = async (email, password) => {\n  const cred = await firebase.auth().createUserWithEmailAndPassword(email, password);\n  await firebase.firestore().collection('user').doc(cred.user.uid).set({\n    email: cred.user.email,\n  });\n};\nFirebase.sendPasswordResetEmail = (email) => firebase.auth().sendPasswordResetEmail(email);\n\n// collection\nFirebase.useSubscribeCollection = useSubscribeCollection;\nFirebase.useCollection = useCollection;\nFirebase.useDocument = useDocument;\nFirebase.useIsLoading = useIsLoading;\nFirebase.batch = () => firebase.firestore().batch();\nFirebase.collection = (collectionName) => {\n  return firebase\n    .firestore()\n    .collection('user')\n    .doc(firebase.auth().currentUser.uid)\n    .collection(collectionName);\n};\n\n// Firebase\nFirebase.firebase = firebase;\n\nexport default Firebase;\n","import axios from 'axios';\n\nconst Cached = {\n  catalogList: [\n    // 個人保養品 (16)\n    ['個人保養品', '1174412216806413726', 'ageLOC Me®'],\n    ['個人保養品', '1174412216806413727', 'ageLOC® LumiSpa®'],\n    ['個人保養品', '1174412216806413728', 'ageLOC® 個人保養品'],\n    ['個人保養品', '1174412216806413736', 'ageLOC® Nutriol® 賦活精萃豐盈'],\n    ['個人保養品', '1174412216806413729', '臉部基礎保養品'],\n    ['個人保養品', '1174412216806413730', '週期精華保養'],\n    ['個人保養品', '1174412216806413731', '瀅白三效保養'],\n    ['個人保養品', '1174412216806413732', '淨膚抗痘調理'],\n    ['個人保養品', '1174412216806413733', 'Tru Face® 活顏抗老保養'],\n    ['個人保養品', '1174412216806413734', 'Epoch生活純品'],\n    ['個人保養品', '1174412216806413735', '身體美膚保養'],\n    ['個人保養品', '1174412216806413737', '品味男士'],\n    ['個人保養品', '1174412216806413738', '如絲美髮養護'],\n    ['個人保養品', '1174412216806413739', '曬麗勻艷陽防曬'],\n    ['個人保養品', '1174412216806413740', '口腔保健'],\n    ['個人保養品', '1174412216806413741', 'Nu Colour® 護膚彩妝'],\n    // ['個人保養品', '1197415650802405422', '精選套裝'],\n    // ['個人保養品', '1218691547716011013', '輔銷品專區'],\n\n    // 營養補充品 (8)\n    ['營養補充品', '1174412216806413743', 'ageLOC® TR90™'],\n    ['營養補充品', '1174412216806413744', 'ageLOC® YOUTHSPAN®'],\n    ['營養補充品', '1174412216806413745', 'ageLOC® R²'],\n    ['營養補充品', '1174412216806413746', '基礎營養'],\n    ['營養補充品', '1174412216806413747', '自我保健'],\n    ['營養補充品', '1218692068953741437', '精選套裝'],\n    ['營養補充品', '1218692115981327441', '輔銷品專區'],\n    ['營養補充品', '1248725323423581208', '兒童營養'],\n  ],\n  catalogProductList: [],\n};\n\n/**\n * 1. Get header list\n * @returns {string[]} header list\n */\nconst getHeaderList = () => ['個人保養品', '營養補充品'];\n\n/**\n * @typedef Catalog\n * @property {string} header\n * @property {string} id\n * @property {string} name\n */\n\n/**\n * Get catalog list\n * @returns {Promise<Catalog[]>}\n */\nconst getCatalogList = async () => {\n  if (Cached.catalogList.length !== 0) {\n    return Cached.catalogList.map((catalog) => ({\n      header: catalog[0],\n      id: catalog[1],\n      name: catalog[2],\n    }));\n  }\n\n  // blocked by CORS policy\n  const url = 'https://www.nuskin.com.tw/services/get_header_tw.5.json';\n  const res = await axios.get(url);\n  const catagoryItems = res.data.items.header.categoryNavigationItems[0].items;\n\n  // 1. 個人保養品 > 系列 (16)\n  const personalCares = catagoryItems\n    .find(({ linkText }) => linkText === '個人保養品')\n    .items.find(({ linkText }) => linkText === '系列')\n    .items.filter(({ linkText }) => linkText !== '精選套裝' && linkText !== '輔銷品專區')\n    .map(({ linkText, categoryId }) => ({\n      header: '個人保養品',\n      name: linkText,\n      id: categoryId,\n    }));\n\n  // 2. 營養補充品 > 系列 (8)\n  const nutritionalSupplements = catagoryItems\n    .find(({ linkText }) => linkText === '營養補充品')\n    .items.find(({ linkText }) => linkText === '系列')\n    .items.map(({ linkText, categoryId }) => ({\n      header: '營養補充品',\n      name: linkText,\n      id: categoryId,\n    }));\n\n  return personalCares.concat(nutritionalSupplements);\n};\n\n/**\n * 2. get catalog list by header\n * @param {string} header\n * @returns {string[]} catalog list\n */\nconst getCatalogListByHeader = async (header) => {\n  const catalogList = await getCatalogList();\n\n  // prettier-ignore\n  return catalogList\n    .filter((catalog) => catalog.header === header)\n    .map((catalog) => catalog.name);\n};\n\n/**\n * @typedef Product\n * @property {string} id\n * @property {string} name\n * @property {number} price\n * @property {string} img\n */\n\n/**\n * get product list by catalog id\n * @param {Catalog} catalog\n * @returns {Promise<Product[]>}\n */\nconst getProductListByCatalogInfo = async (catalog) => {\n  const host = 'https://www.nuskin.com.tw/nuskin-tw-trade-application/api/v1/nuskin/search/item/search'; // prettier-ignore\n  const url = `${host}?pageNum=1&pageSize=100&catalogId=${catalog.id}`;\n  const res = await axios.get(url);\n\n  return res.data.data.itemVos.list.map((item) => ({\n    id: item.itemId,\n    name: item.itemName,\n    price: item.itemPrice[0].salePrice,\n    img: item.absolutePathItemImage,\n    catalog,\n  }));\n};\n\n/**\n * Get all product list\n * @returns {Promise<Product[]>}\n */\nconst getAllProductList = async () => {\n  const catalogList = await getCatalogList();\n  const productListOfEachCataLog = await Promise.all(catalogList.map(getProductListByCatalogInfo));\n\n  // filter the repeated products\n  const productMap = new Map();\n  for (const products of productListOfEachCataLog) {\n    for (const p of products) {\n      productMap.set(p.id, p);\n    }\n  }\n\n  return Array.from(productMap.values());\n};\n\n/**\n * @typedef CatalogWithProductList\n * @property {string} header\n * @property {string} catalog\n * @property {Product[]} productList\n */\n\n/**\n * Get product list of catalog\n * @returns {Promise<CatalogWithProductList[]>}\n */\nconst getCatalogProductList = async () => {\n  if (Cached.catalogProductList.length !== 0) {\n    return Cached.catalogProductList;\n  }\n\n  const catalogList = await getCatalogList();\n  const productListOfEachCataLog = await Promise.all(catalogList.map(getProductListByCatalogInfo));\n\n  for (let i = 0; i < catalogList.length; i++) {\n    catalogList[i].catalog = catalogList[i].name;\n    catalogList[i].productList = productListOfEachCataLog[i];\n    delete catalogList[i].id;\n    delete catalogList[i].name;\n  }\n\n  // cache the result\n  Cached.catalogProductList = catalogList;\n  return catalogList;\n};\n\n/**\n * 3. getFilteredProductList\n * @param {string} header\n * @param {string} catalog\n * @returns {Product[]} productList\n */\nconst getFilteredProductList = async ({ header = '', catalog = '' } = {}) => {\n  // 1. no filter\n  if (header === '' && catalog === '') {\n    return getAllProductList();\n  }\n\n  const catalogProductList = await getCatalogProductList();\n\n  // 2. filtered by header only\n  if (header !== '' && catalog === '') {\n    const productMap = new Map();\n    for (const cat of catalogProductList) {\n      if (cat.header !== header) continue;\n      for (const product of cat.productList) {\n        productMap.set(product.id, product);\n      }\n    }\n    return Array.from(productMap.values());\n  }\n\n  // 3. filtered by header and catalog\n  if (header !== '' && catalog !== '') {\n    return catalogProductList.find((cat) => cat.header === header && cat.catalog === catalog)\n      .productList;\n  }\n};\n\nconst NuskinAPI = {\n  getHeaderList,\n  getCatalogListByHeader,\n  getFilteredProductList,\n};\n\nexport default NuskinAPI;\n","import { useHistory, useLocation } from 'react-router-dom';\n\nimport Firebase from '../apis/firebase';\nimport NuskinAPI from '../apis/nuskin';\nimport { useEffect } from 'react';\n\nconst useLogoutUnauthorizedUser = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [isInitialized, isLogin] = Firebase.useState((state) => [\n    !state.isInitializing,\n    state.isLogin,\n  ]);\n  const isAuthPanel = !['/login', '/signup', '/forget_password'].includes(pathname);\n\n  useEffect(() => {\n    // auto logout\n    if (isInitialized && isAuthPanel && !isLogin) {\n      history.push('/login');\n    }\n\n    // auto login\n    if (isInitialized && !isAuthPanel && isLogin) {\n      history.push('/clients');\n    }\n  }, [history, isInitialized, isAuthPanel, isLogin, pathname]);\n};\n\nconst useFetchNuskinProductList = () => {\n  const dispatch = Firebase.useDispatch();\n\n  useEffect(() => {\n    let isMounted = true;\n\n    dispatch((state) => {\n      state.collection.product.isLoading = true;\n    });\n\n    NuskinAPI.getFilteredProductList()\n      .then((list) => {\n        if (!isMounted) return;\n\n        dispatch((state) => {\n          state.collection.product = { list, isLoading: false };\n\n          // add item to the doc\n          list.forEach((item) => {\n            state.doc[item.id] = item;\n          });\n        });\n      })\n      .catch((e) => {\n        console.log(e); // TODO: error handler\n\n        if (!isMounted) return;\n        dispatch((state) => {\n          state.collection.product.isLoading = false;\n        });\n      });\n\n    return () => {\n      isMounted = false;\n    };\n  }, [dispatch]);\n};\n\nconst useInitApp = () => {\n  // fetch nuskin product and put into product collection\n  useFetchNuskinProductList();\n\n  // subscribe firestore\n  Firebase.useSubscribeAuthStateChanged();\n  Firebase.useSubscribeCollection('client');\n  Firebase.useSubscribeCollection('purchase');\n  Firebase.useSubscribeCollection('inventory');\n\n  // logout unauthorized user to '/login' panel\n  useLogoutUnauthorizedUser();\n};\n\nexport default useInitApp;\n","import Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Loader = ({ open = true }) => {\n  return (\n    <Backdrop style={{ zIndex: 999 }} open={open}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nexport default Loader;\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// material-ui\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\n\nconst getErrorMessage = (error) => {\n  const ERROR_MESSAGE = {\n    'auth/invalid-email': '此信箱格式錯誤',\n    'auth/user-disabled': '此用戶已被停用',\n    'auth/user-not-found': '此用戶不存在',\n    'auth/wrong-password': '密碼錯誤',\n  };\n  return ERROR_MESSAGE[error.code] || `${error.code}: ${error.message}`;\n};\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLogining, setIsLogining] = useState(false);\n  const [error, setError] = useState({ code: '', message: '' });\n\n  const onFieldChange = (setter) => (e) => {\n    setError({ code: '', message: '' });\n    setter(e.target.value);\n  };\n\n  return (\n    <form\n      style={{ textAlign: 'center', padding: '10px' }}\n      onSubmit={async (e) => {\n        e.preventDefault();\n\n        setIsLogining(true);\n        await Firebase.login(email, password).catch(setError);\n        setIsLogining(false);\n      }}\n    >\n      <Loader open={isLogining} />\n\n      <br />\n      <br />\n      <Typography variant=\"h3\" gutterBottom>\n        Reminder\n      </Typography>\n\n      {/* 1. email */}\n      <TextField\n        style={{ width: '100%' }}\n        name=\"email\"\n        type=\"email\"\n        label=\"信箱\"\n        variant=\"outlined\"\n        InputLabelProps={{ shrink: true }}\n        onChange={onFieldChange(setEmail)}\n        error={/email/.test(error.code)}\n      />\n\n      <br />\n      <br />\n\n      {/* 2. password */}\n      <TextField\n        style={{ width: '100%' }}\n        name=\"password\"\n        type=\"password\"\n        label=\"密碼\"\n        variant=\"outlined\"\n        InputLabelProps={{ shrink: true }}\n        onChange={onFieldChange(setPassword)}\n        error={/password/.test(error.code)}\n      />\n\n      <br />\n      <br />\n      <br />\n      {error.code && <FormHelperText error={true}>{getErrorMessage(error)}</FormHelperText>}\n      {error.code && <br />}\n\n      <div className=\"unauth-buttons\">\n        <Button size=\"large\" color=\"primary\" onClick={() => history.push('/signup')}>\n          註冊新帳號\n        </Button>\n        <Button size=\"large\" color=\"primary\" onClick={() => history.push('/forget_password')}>\n          忘記密碼\n        </Button>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={email === '' || password === ''}\n        >\n          登入\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginPage;\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// material-ui\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\n\nconst getErrorMessage = (error) => {\n  const ERROR_MESSAGE = {\n    'auth/invalid-email': '此信箱格式錯誤',\n    'auth/email-already-in-use': '此信箱已經被使用',\n    'auth/weak-password': '密碼至少要六個字元',\n  };\n  return ERROR_MESSAGE[error.code] || `${error.code}: ${error.message}`;\n};\n\nconst SignupPage = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isSignuping, setIsSignuping] = useState(false);\n  const [error, setError] = useState({ code: '', message: '' });\n  const isConfirmPasswordError =\n    password !== '' && confirmPassword !== '' && password !== confirmPassword;\n\n  const onFieldChange = (stateSetter) => (e) => {\n    setError({ code: '', message: '' });\n    stateSetter(e.target.value);\n  };\n\n  return (\n    <form\n      style={{ textAlign: 'center', padding: '10px' }}\n      onSubmit={async (e) => {\n        e.preventDefault();\n\n        setIsSignuping(true);\n        await Firebase.signup(email, password).catch(setError);\n        setIsSignuping(false);\n      }}\n    >\n      <Loader open={isSignuping} />\n\n      <br />\n      <br />\n      <Typography variant=\"h3\" gutterBottom>\n        Reminder\n      </Typography>\n\n      {/* 1. email */}\n      <TextField\n        style={{ width: '100%' }}\n        name=\"email\"\n        type=\"email\"\n        label=\"信箱\"\n        variant=\"outlined\"\n        InputLabelProps={{ shrink: true }}\n        onChange={onFieldChange(setEmail)}\n        error={/email/.test(error.code)}\n      />\n\n      <br />\n      <br />\n\n      {/* 2. password */}\n      <TextField\n        style={{ width: '100%' }}\n        name=\"password\"\n        type=\"password\"\n        label=\"密碼\"\n        variant=\"outlined\"\n        InputLabelProps={{ shrink: true }}\n        onChange={onFieldChange(setPassword)}\n        error={/password/.test(error.code)}\n      />\n\n      <br />\n      <br />\n\n      {/* 3. confirm password */}\n      <TextField\n        style={{ width: '100%' }}\n        name=\"confirm-password\"\n        type=\"password\"\n        label=\"確認密碼\"\n        variant=\"outlined\"\n        InputLabelProps={{ shrink: true }}\n        onChange={onFieldChange(setConfirmPassword)}\n        error={isConfirmPasswordError}\n        helperText={isConfirmPasswordError && '密碼必須相同'}\n      />\n\n      <br />\n      <br />\n\n      {error.code && <FormHelperText error={true}>{getErrorMessage(error)}</FormHelperText>}\n      {error.code && <br />}\n\n      <div className=\"unauth-buttons\">\n        <Button size=\"large\" color=\"primary\" onClick={() => history.push('/login')}>\n          回到登入頁面\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={email === '' || password === '' || password !== confirmPassword}\n        >\n          註冊\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default SignupPage;\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// material-ui\nimport Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { AppBar, Dialog, IconButton, Toolbar } from '@material-ui/core';\n\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\n\nconst getErrorMessage = (error) => {\n  const ERROR_MESSAGE = {\n    'auth/invalid-email': '此信箱格式錯誤',\n    'auth/user-not-found': '查無此使用者',\n    'auth/too-many-requests': '請稍後再試',\n  };\n  return ERROR_MESSAGE[error.code] || `${error.code}: ${error.message}`;\n};\n\nfunction ShowSuccessDialog(props) {\n  const open = props.open;\n  const onClose = props.onClose;\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flex: 1 }}>\n            寄送成功\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </Dialog>\n  );\n}\n\nconst ForgetPasswordPage = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [isSignuping, setIsSignuping] = useState(false);\n  const [error, setError] = useState({ code: '', message: '' });\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const onFieldChange = (stateSetter) => (e) => {\n    setError({ code: '', message: '' });\n    stateSetter(e.target.value);\n  };\n\n  return (\n    <form\n      style={{ textAlign: 'center', padding: '10px' }}\n      onSubmit={async (e) => {\n        e.preventDefault();\n\n        setIsSignuping(true);\n        await Firebase.sendPasswordResetEmail(email)\n          .then(() => {\n            setOpenDialog(true);\n          })\n          .catch(setError);\n        setIsSignuping(false);\n      }}\n    >\n      <ShowSuccessDialog open={openDialog} onClose={() => setOpenDialog(false)} />\n      <Loader open={isSignuping} />\n\n      <br />\n      <br />\n      <Typography variant=\"h3\" gutterBottom>\n        Reminder\n      </Typography>\n\n      {/* 1. email */}\n      <TextField\n        style={{ width: '100%' }}\n        name=\"email\"\n        type=\"email\"\n        label=\"信箱\"\n        variant=\"outlined\"\n        InputLabelProps={{ shrink: true }}\n        onChange={onFieldChange(setEmail)}\n        error={/email/.test(error.code)}\n      />\n\n      <br />\n      <br />\n\n      {error.code && <FormHelperText error={true}>{getErrorMessage(error)}</FormHelperText>}\n      {error.code && <br />}\n\n      <div className=\"unauth-buttons\">\n        <Button size=\"large\" color=\"primary\" onClick={() => history.push('/login')}>\n          回到登入頁面\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={email === ''}\n        >\n          重設密碼郵件\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default ForgetPasswordPage;\n","import createStore from '../utils/createStore';\nimport clientActions from '../components/clients/clientActions';\nimport productActions from '../components/product/productActions';\n\n// App State\nconst appState = {\n  client: {\n    searchInput: '',\n    showAddDialog: false,\n    showDeleteDialog: false,\n    showEditDialog: false,\n\n    order: {\n      orderList: [],\n      searchProductIntput: '',\n      selectedProductItems: {},\n    },\n  },\n\n  productPage: {\n    searchInput: '',\n    selectedItems: {},\n  },\n  addInventoryDialog: { show: false },\n  addPurchaseDialog: { show: false },\n  subscriptionRuleDialog: { show: false },\n  bottomNavigation: { index: 0 },\n};\n\n// App Actions\n// prettier-ignore\nconst changeBottomNavigationIndex = (index = 0) => (state) => {\n  state.bottomNavigation.index = index;\n};\n\nconst showAddInventoryDialog = (show) => (state) => {\n  state.addInventoryDialog.show = show;\n};\n\nconst showAddPurchaseDialog = (show) => (state) => {\n  state.addPurchaseDialog.show = show;\n};\n\nconst showSubscriptionRuleDialog = (show) => (state) => {\n  state.subscriptionRuleDialog.show = show;\n};\n\nconst appActions = {\n  client: clientActions,\n  product: productActions,\n  changeBottomNavigationIndex,\n  showAddInventoryDialog,\n  showAddPurchaseDialog,\n  showSubscriptionRuleDialog,\n};\n\n// App Store\nexport default createStore(appState, appActions);\n","const setSearchInput = (searchInput) => (state) => {\n  state.client.searchInput = searchInput.toLowerCase();\n};\n\nconst showAddDialog = (show) => (state) => {\n  state.client.showAddDialog = show;\n};\n\nconst showEditDialog = (show) => (state) => {\n  state.client.showEditDialog = show;\n};\n\nconst showDeleteDialog = (show) => (state) => {\n  state.client.showDeleteDialog = show;\n};\n\nconst clientActions = {\n  setSearchInput,\n  showAddDialog,\n  showEditDialog,\n  showDeleteDialog,\n};\n\nexport default clientActions;\n","const setSearchInput = (searchInput) => (state) => {\n  state.productPage.searchInput = searchInput.toLowerCase();\n};\n\nconst toggleProduct = (product) => (state) => {\n  if (state.productPage.selectedItems.hasOwnProperty(product.id)) {\n    delete state.productPage.selectedItems[product.id];\n  } else {\n    state.productPage.selectedItems[product.id] = true;\n  }\n};\n\nconst clearSelectedProducts = () => (state) => {\n  state.productPage.selectedItems = {};\n};\n\nconst productActions = {\n  setSearchInput,\n  toggleProduct,\n  clearSelectedProducts,\n};\n\nexport default productActions;\n","import { useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n// material-ui\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\n// icons\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PeopleIcon from '@material-ui/icons/People';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\n\nimport AppStore from '../store/appStore';\n\nconst NAV_LIST = [\n  ['/clients', '客戶', PeopleIcon],\n  // ['/inventory', '庫存', VerticalSplitIcon], // '@material-ui/icons/VerticalSplit'\n  ['/reminder', '購買提醒', WatchLaterIcon],\n  ['/account', '會員帳號', AccountCircleIcon],\n].map((item) => {\n  const [pathname, label, icon] = item;\n  return { pathname, label, icon };\n});\n\nconst useInitNavgationByPathname = (action) => {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    const navIndex = NAV_LIST.findIndex((nav) => nav.pathname === pathname);\n    action.changeBottomNavigationIndex(navIndex === -1 ? 0 : navIndex); // default is 0\n  }, [action, pathname]);\n};\n\nconst AppNavigation = () => {\n  const action = AppStore.useAction();\n  useInitNavgationByPathname(action);\n\n  const nav = AppStore.useState((state) => state.bottomNavigation);\n  const history = useHistory();\n\n  return (\n    <BottomNavigation\n      showLabels\n      value={nav.index}\n      onChange={(event, navIndex) => {\n        action.changeBottomNavigationIndex(navIndex);\n        const nav = NAV_LIST[navIndex] || NAV_LIST[0]; // default is 0\n        history.push(nav.pathname);\n      }}\n    >\n      {NAV_LIST.map((nav, index) => (\n        <BottomNavigationAction key={index} label={nav.label} icon={<nav.icon />} />\n      ))}\n    </BottomNavigation>\n  );\n};\n\nexport default AppNavigation;\n","// https://material-ui.com/components/app-bar/#app-bar-with-a-primary-search-field\nimport { alpha, makeStyles } from '@material-ui/core/styles';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nexport default function SearchBox({ searchInput, onChange }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        autoFocus\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        }}\n        inputProps={{ 'aria-label': 'search' }}\n        value={searchInput}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","import { useHistory } from 'react-router-dom';\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n// icon\nimport AddIcon from '@material-ui/icons/Add';\n\n// store\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\n\nimport AppNavigation from '../AppNavigation';\nimport Loader from '../Loader';\nimport SearchBox from '../SearchBox';\n\nconst ClientItem = ({ client, purchase }) => {\n  const history = useHistory();\n\n  const [lastPurchaseDate = '無'] = purchase.list\n    .filter((purchase) => purchase.clientId === client.id)\n    .map((purchase) => purchase.purchaseDate)\n    .sort((a, b) => (a < b ? 1 : a > b ? -1 : 0)); // sort string by large to small order\n\n  const birth = client.birth ? ` (${client.birth})` : '';\n\n  return (\n    <ListItem button onClick={() => history.push('/clients/' + client.id)}>\n      <ListItemAvatar>\n        <Avatar></Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={client.lastName + client.firstName + birth}\n        secondary={'最後購買日期：' + lastPurchaseDate}\n      />\n    </ListItem>\n  );\n};\n\nconst ClientsPage = () => {\n  const action = AppStore.useAction();\n  const client = Firebase.useCollection('client');\n  const purchase = Firebase.useCollection('purchase');\n  const searchInput = AppStore.useState((s) => s.client.searchInput);\n\n  // check loading\n  const isDataLoading = Firebase.useIsLoading();\n  if (isDataLoading) {\n    return <Loader />;\n  }\n\n  const clientList = client.list\n    .filter((c) => (c.lastName + c.firstName).toLowerCase().includes(searchInput))\n    .map((c) => <ClientItem key={c.id} client={c} purchase={purchase} />);\n\n  return (\n    <div className=\"panel-container\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <SearchBox\n            searchInput={searchInput}\n            onChange={(e) => action.client.setSearchInput(e.target.value)}\n          />\n          <div style={{ flexGrow: 1 }}></div>\n          <IconButton color=\"inherit\" onClick={() => action.client.showAddDialog(true)}>\n            <AddIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className=\"panel-content\">\n        <List>{clientList}</List>\n      </div>\n      <AppNavigation />\n    </div>\n  );\n};\n\nexport default ClientsPage;\n","export const requestSubmit = (form) => {\n  // https://github.com/aws-amplify/amplify-js/pull/5333/files\n  const fakeButton = document.createElement('button');\n  fakeButton.type = 'submit';\n  fakeButton.style.display = 'none';\n\n  form.appendChild(fakeButton);\n\n  fakeButton.click();\n  fakeButton.remove();\n};\n\n// yyyy-MM-dd\nexport const formatDate = (date) => {\n  const YYYY = date.getFullYear();\n\n  let MM = date.getMonth() + 1;\n  if (MM < 10) MM = '0' + MM;\n\n  let DD = date.getDate();\n  if (DD < 10) DD = '0' + DD;\n\n  return `${YYYY}-${MM}-${DD}`;\n};\n","import { forwardRef, useRef, useState } from 'react';\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// icon\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\nimport { requestSubmit } from '../../utils/generalUtils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DefaultFormValues = {\n  lastName: '',\n  firstName: '', // required\n  phone: '',\n  email: '',\n  city: '',\n  birth: '',\n  note: '',\n};\n\nconst AddClientDialog = () => {\n  const action = AppStore.useAction();\n  const [isLoading, setIsLoading] = useState(false);\n  const showAddClientDialog = AppStore.useState((s) => s.client.showAddDialog);\n  const formRef = useRef(null);\n  const [formValues, setFormValues] = useState(DefaultFormValues);\n\n  const onFieldChange = (e) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n    await Firebase.collection('client').add(formValues);\n    setFormValues(DefaultFormValues); // reset form values\n    setIsLoading(false);\n\n    action.client.showAddDialog(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={showAddClientDialog}\n      onClose={() => action.client.showAddDialog(false)}\n      TransitionComponent={Transition}\n    >\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => action.client.showAddDialog(false)} // TODO: dirty check\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flex: 1 }}>\n            新增客戶\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => requestSubmit(formRef.current)}>\n            新增\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <form style={{ padding: '30px 24px' }} ref={formRef} onSubmit={onSubmit}>\n        <Loader open={isLoading} />\n\n        {/* 1. lastName */}\n        <TextField\n          name=\"lastName\"\n          value={formValues.lastName}\n          label=\"姓氏\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 2. firstName */}\n        <TextField\n          required\n          name=\"firstName\"\n          value={formValues.firstName}\n          label=\"名字\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 3. phone */}\n        <TextField\n          name=\"phone\"\n          value={formValues.phone}\n          type=\"phone\"\n          label=\"電話\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 4. email */}\n        <TextField\n          name=\"email\"\n          value={formValues.email}\n          type=\"email\"\n          label=\"信箱\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 5. city */}\n        <TextField\n          name=\"city\"\n          value={formValues.city}\n          label=\"城市\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 6. birth */}\n        <TextField\n          name=\"birth\"\n          value={formValues.birth}\n          label=\"生日\"\n          type=\"date\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n          style={{ width: '210px' }}\n        />\n\n        <br />\n        <br />\n\n        {/* 7. note */}\n        <TextField\n          name=\"note\"\n          value={formValues.note}\n          label=\"筆記\"\n          multiline\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n          style={{ width: '100%' }}\n        />\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddClientDialog;\n","import { useHistory, useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n\n// material-ui\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// icon\nimport ArrowBackIosTwoToneIcon from '@material-ui/icons/ArrowBackIosTwoTone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\n\nexport default function ClientInfoPage() {\n  const history = useHistory();\n  const { clientId } = useParams();\n  const purchaseCollection = Firebase.useCollection('purchase');\n  const doc = Firebase.useDocument();\n  const action = AppStore.useAction();\n\n  // check loading\n  const isDataLoading = Firebase.useIsLoading();\n  if (isDataLoading) {\n    return <Loader />;\n  }\n\n  // check client\n  const client = doc(clientId);\n  if (!client) {\n    return <Typography variant=\"h4\">不存在此客戶</Typography>;\n  }\n\n  const groupedPurchaseData = {};\n  purchaseCollection.list\n    .filter((purchase) => purchase.clientId === clientId)\n    .forEach((purchase) => {\n      const newDate = purchase.purchaseDate;\n      const newOrder = purchase.orderId;\n      const key = newDate + newOrder;\n      if (typeof groupedPurchaseData[key] === 'undefined') {\n        groupedPurchaseData[key] = [];\n      }\n      groupedPurchaseData[key].push(purchase);\n    });\n\n  const orderedGroupedPurchaseData = Object.keys(groupedPurchaseData)\n    .sort((a, b) => new Date(b.slice(0, 10)) - new Date(a.slice(0, 10)))\n    .reduce((arr, key) => {\n      arr.push(groupedPurchaseData[key]);\n      return arr;\n    }, []);\n\n  const renderPurchaseData = orderedGroupedPurchaseData.map((order) => {\n    let orderValue = 0;\n    const renderedList = order.map((purchase) => {\n      const product = doc(purchase.productId);\n      orderValue += product.price * purchase.amount;\n      return (\n        <ListItem button key={`item-${purchase.id}`}>\n          <ListItemAvatar className=\"product-item-avatar\">\n            <Avatar src={product.img} />\n          </ListItemAvatar>\n\n          <ListItemText\n            primary={product.name}\n            secondary={`$${product.price} x ${purchase.amount}`}\n          ></ListItemText>\n        </ListItem>\n      );\n    });\n\n    const key = nanoid();\n    return (\n      <Accordion key={`order-${key}`}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography style={{ flexBasis: '50%' }}>{order[0].purchaseDate}</Typography>\n          <Typography>{`金額：$${orderValue}`}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <List>{renderedList}</List>\n        </AccordionDetails>\n        <AccordionActions>\n          <Button size=\"small\" variant=\"contained\" color=\"primary\">\n            編輯\n          </Button>\n        </AccordionActions>\n      </Accordion>\n    );\n  });\n\n  return (\n    <div className=\"panel-container\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton color=\"inherit\" onClick={() => history.push('/clients/')}>\n            <ArrowBackIosTwoToneIcon />\n          </IconButton>\n          <Typography variant=\"h6\">{client.lastName + client.firstName}</Typography>\n          <div style={{ flexGrow: 1 }}></div>\n          <IconButton color=\"inherit\">\n            <DeleteIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"panel-content\">\n        {/* 1. Basic Information */}\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography>基本資料</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div style={{ width: '100%' }}>\n              <Typography>姓名：{client.lastName + client.firstName}</Typography>\n              <Typography>生日：{client.birth}</Typography>\n              <Typography>電話：{client.phone}</Typography>\n              <Typography>信箱：{client.email}</Typography>\n              <Typography>城市：{client.city}</Typography>\n              <Typography>備註：{client.note}</Typography>\n              <div style={{ display: 'flex' }}>\n                <div style={{ flexGrow: 1 }}></div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => action.client.showEditDialog(true)}\n                >\n                  編輯\n                </Button>\n              </div>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n\n        {/* 2. Purchase History */}\n        <br />\n        <br />\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h6\">購買紀錄</Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              history.push(`/clients/${clientId}/order/selectProducts`);\n            }}\n          >\n            購買\n          </Button>\n        </div>\n        <br />\n        {renderPurchaseData}\n      </div>\n    </div>\n  );\n}\n","import { forwardRef, useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// icon\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\nimport { requestSubmit } from '../../utils/generalUtils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst EditClientDialog = () => {\n  const action = AppStore.useAction();\n  const [isLoading, setIsLoading] = useState(false);\n  const showEditClientDialog = AppStore.useState((s) => s.client.showEditDialog);\n  const formRef = useRef(null);\n  const [formValues, setFormValues] = useState({});\n  const { clientId } = useParams();\n  const doc = Firebase.useDocument();\n\n  const clientInfo = doc(clientId);\n  useEffect(() => {\n    if (!clientInfo) return;\n\n    const { id, ...info } = clientInfo;\n    setFormValues(info);\n  }, [clientInfo]);\n\n  // check loading\n  const isDataLoading = Firebase.useIsLoading();\n  if (isDataLoading) {\n    return <Loader />;\n  }\n\n  const onFieldChange = (e) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n    await Firebase.collection('client').doc(clientId).set(formValues);\n    setIsLoading(false);\n    // TODO: another dialog to show the edit is success?\n    action.client.showEditDialog(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={showEditClientDialog}\n      onClose={() => action.client.showEditDialog(false)}\n      TransitionComponent={Transition}\n    >\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => action.client.showEditDialog(false)} // TODO: dirty check\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flex: 1 }}>\n            編輯客戶\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => requestSubmit(formRef.current)}>\n            確認修改\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <form style={{ padding: '30px 24px' }} ref={formRef} onSubmit={onSubmit}>\n        <Loader open={isLoading} />\n\n        {/* 1. lastName */}\n        <TextField\n          name=\"lastName\"\n          value={formValues.lastName}\n          label=\"姓氏\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 2. firstName */}\n        <TextField\n          required\n          name=\"firstName\"\n          value={formValues.firstName}\n          label=\"名字\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 3. phone */}\n        <TextField\n          name=\"phone\"\n          value={formValues.phone}\n          type=\"phone\"\n          label=\"電話\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 4. email */}\n        <TextField\n          name=\"email\"\n          value={formValues.email}\n          type=\"email\"\n          label=\"信箱\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 5. city */}\n        <TextField\n          name=\"city\"\n          value={formValues.city}\n          label=\"城市\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n\n        <br />\n        <br />\n\n        {/* 6. birth */}\n        <TextField\n          name=\"birth\"\n          value={formValues.birth}\n          label=\"生日\"\n          type=\"date\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n          style={{ width: '210px' }}\n        />\n\n        <br />\n        <br />\n\n        {/* 7. note */}\n        <TextField\n          name=\"note\"\n          value={formValues.note}\n          label=\"筆記\"\n          multiline\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n          style={{ width: '100%' }}\n        />\n      </form>\n    </Dialog>\n  );\n};\n\nexport default EditClientDialog;\n","import { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\n// material-ui\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\n\nconst DeleteClientDialog = () => {\n  const showDeleteClientDialog = AppStore.useState((state) => state.client.showDeleteDialog);\n  const action = AppStore.useAction();\n  const { clientId } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const deleteClient = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      await Firebase.collection('client').doc(clientId).delete();\n    } catch (err) {\n      console.log(err);\n    }\n    action.client.showDeleteDialog(false);\n    setIsLoading(false);\n    // TODO: show another dialog?\n    history.push('/clients/');\n  };\n\n  return (\n    <Dialog open={showDeleteClientDialog} onClose={() => action.client.showDeleteDialog(false)}>\n      <DialogTitle>刪除用戶</DialogTitle>\n      <DialogContent>\n        <DialogContentText>請問您確定要刪除這個客戶的資料嗎？</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={() => action.client.showDeleteDialog(false)}>\n          取消\n        </Button>\n        <Button color=\"secondary\" autoFocus onClick={deleteClient}>\n          刪除\n        </Button>\n      </DialogActions>\n\n      <Loader open={isLoading} />\n    </Dialog>\n  );\n};\n\nexport default DeleteClientDialog;\n","// 1. String\nexport const shouldBeString = (name, value) => {\n  if (typeof value !== 'string') throw new TypeError(`${name} should be a string`);\n};\n\nexport const shouldBeNonEmptyString = (name, value) => {\n  shouldBeString(name, value);\n  if (value.length <= 0) throw new RangeError(`${name} should not be empty string`);\n};\n\n// 2. Number\nexport const shouldBeNumber = (name, value) => {\n  if (typeof value !== 'number') throw new TypeError(`${name} should be a number`);\n};\n\nexport const shouldBePositiveNumber = (name, value) => {\n  shouldBeNumber(name, value);\n  if (value <= 0) throw new RangeError(`${name} should be a positive number`);\n};\n\nexport const shouldBeNonNegativeNumber = (name, value) => {\n  shouldBeNumber(name, value);\n  if (value < 0) throw new RangeError(`${name} should be a non-negative number`);\n};\n\n// 3. Object\nexport const shouldBeNonEmptyObject = (name, value) => {\n  if (!(Object.keys(value).length > 0))\n    throw new RangeError(`${name} should not be an empty array`);\n};\n","import {\n  shouldBeString,\n  shouldBeNonEmptyString,\n  shouldBePositiveNumber,\n  shouldBeNonEmptyObject,\n} from './validator';\n\n/**\n * createPurchase\n *\n * @param {object} purchase\n * @param {string} purchase.orderId\n * @param {string} purchase.clientId\n * @param {string} purchase.productId\n * @param {number} purchase.amount\n * @param {date}   purchase.date\n * @param {Array}  purchase.remindDates\n * @param {string} purchase.note\n * @returns\n */\nconst createPurchase = ({\n  orderId,\n  clientId,\n  productId,\n  amount,\n  purchaseDate,\n  remindDates,\n  note,\n}) => {\n  shouldBeNonEmptyString('orderId', orderId);\n  shouldBeNonEmptyString('clientId', clientId);\n  shouldBeNonEmptyString('productId', productId);\n  shouldBePositiveNumber('amount', amount);\n  shouldBeNonEmptyString('date', purchaseDate);\n  shouldBeNonEmptyObject('remindDates', remindDates);\n  shouldBeString('note', note);\n  return { orderId, clientId, productId, amount, purchaseDate, remindDates, note };\n};\n\nconst schema = {\n  createPurchase,\n};\n\nexport default schema;\n","import './CreateOrderPage.scss';\nimport { useState, useEffect } from 'react';\nimport produce from 'immer';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// icon\nimport ArrowBackIosTwoToneIcon from '@material-ui/icons/ArrowBackIosTwoTone';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\nimport Schema from '../../utils/schema';\nimport { formatDate } from '../../utils/generalUtils';\nimport moment from 'moment';\n\nconst OrderItem = ({ order, orderIndex, setOrderList }) => {\n  const { product, amount } = order;\n  const action = AppStore.useAction();\n\n  const updateItemAmount = (amount) => {\n    return setOrderList((orderList) => {\n      return produce(orderList, (draft) => {\n        const newAmount = draft[orderIndex].amount + amount;\n        if (newAmount < 0) {\n          draft.splice(orderIndex, 1); // delete order\n          action.product.toggleProduct(orderList[orderIndex].product);\n        } else {\n          draft[orderIndex].amount = newAmount; // update amount\n        }\n      });\n    });\n  };\n\n  return (\n    <ListItem>\n      <ListItemAvatar className=\"product-item-avatar\">\n        <Avatar src={product.img} />\n      </ListItemAvatar>\n\n      <ListItemText\n        className=\"product-item-text\"\n        primary={product.name}\n        secondary={product.catalog.name}\n      />\n\n      <ListItemSecondaryAction className=\"product-item-amount\">\n        <Typography className=\"amount\">\n          ${product.price} x {amount}\n        </Typography>\n\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button onClick={() => updateItemAmount(+1)}>+</Button>\n          <Button onClick={() => updateItemAmount(-1)}>-</Button>\n        </ButtonGroup>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nconst CreateOrderPage = () => {\n  // hooks\n  const history = useHistory();\n  const param = useParams();\n  const doc = Firebase.useDocument();\n  const productPage = AppStore.useState((s) => s.productPage);\n  const action = AppStore.useAction();\n  const [orderList, setOrderList] = useState([]);\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [isSavingOrderList, setIsSavingOrderList] = useState(false);\n\n  useEffect(() => {\n    const chosenProducts = Object.keys(productPage.selectedItems).map((productId) => {\n      return { product: doc(productId), amount: 1 };\n    });\n    setOrderList((list) => [...list, ...chosenProducts]);\n  }, []);\n\n  // check loading\n  const isDataLoading = Firebase.useIsLoading();\n  if (isDataLoading) {\n    return <Loader />;\n  }\n\n  // check client\n  const client = doc(param.clientId);\n  if (!client) {\n    return <Typography variant=\"h4\">不存在此客戶</Typography>;\n  }\n\n  const totalPrice = orderList.reduce((total, order) => {\n    return total + order.amount * order.product.price;\n  }, 0);\n\n  const closeDialog = () => setShowConfirmDialog(false);\n  const gotoClientInfoPage = () => history.push(`/clients/${client.id}`);\n  const gotoProductPage = () => history.push(`/clients/${client.id}/order/selectProducts`);\n  const saveOrderList = async () => {\n    setIsSavingOrderList(true);\n\n    // https://cloud.google.com/firestore/docs/manage-data/transactions#batched-writes\n    const batch = Firebase.batch();\n    const orderId = nanoid();\n    for (const order of orderList) {\n      if (order.amount <= 0) {\n        continue;\n      }\n\n      const remindDates = Array.from({ length: order.amount }, (_, i) => {\n        return moment()\n          .add(i + 2, 'months')\n          .format('YYYY-MM-DD');\n      }).reduce((acc, cur) => {\n        const currentYear = moment(cur).year();\n        if (!acc[currentYear]) acc[currentYear] = [];\n        acc[currentYear].push(moment(cur).month());\n        return acc;\n      }, {});\n\n      batch.set(\n        Firebase.collection('purchase').doc(),\n        Schema.createPurchase({\n          orderId,\n          clientId: client.id,\n          productId: order.product.id,\n          amount: order.amount,\n          purchaseDate: formatDate(new Date()), // TODO: select date\n          remindDates: remindDates,\n          note: '', // TODO: add note\n        })\n      );\n    }\n\n    await batch.commit();\n    action.product.clearSelectedProducts();\n    gotoClientInfoPage();\n  };\n\n  return (\n    <div className=\"panel-container\">\n      {/* 1. Top App Bar */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton color=\"inherit\" onClick={gotoProductPage}>\n            <ArrowBackIosTwoToneIcon />\n          </IconButton>\n          <Typography variant=\"h6\">購買產品 ({client.lastName + client.firstName})</Typography>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"panel-content\">\n        {/* 2. Order List */}\n        <List>\n          {orderList.map((order, index) => (\n            <OrderItem key={index} order={order} orderIndex={index} setOrderList={setOrderList} />\n          ))}\n        </List>\n      </div>\n\n      {/* 3. Bottom App Bar: Total Amount and Confirm Purchase */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">總金額：{totalPrice} 元</Typography>\n          <div style={{ flexGrow: 1 }}></div>\n          <IconButton\n            color=\"inherit\"\n            disabled={totalPrice <= 0}\n            onClick={() => setShowConfirmDialog(true)}\n          >\n            <ShoppingCartIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      {/* 4. Confirm Modal */}\n      <Dialog\n        fullScreen\n        open={showConfirmDialog}\n        onClose={closeDialog}\n        container={document.getElementById('reminder-app')}\n      >\n        <DialogTitle onClose={closeDialog}>購買確認：{totalPrice} 元</DialogTitle>\n        <DialogContent dividers>\n          {isSavingOrderList ? (\n            <Loader />\n          ) : (\n            <List>\n              {orderList\n                .filter((order) => order.amount > 0)\n                .map((order, index) => {\n                  const { product, amount } = order;\n\n                  return (\n                    <ListItem key={index}>\n                      <ListItemAvatar className=\"product-item-avatar\">\n                        <Avatar src={product.img} />\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={`${index + 1}. ${product.name}`}\n                        secondary={`$${product.price} x ${amount}`}\n                      />\n                    </ListItem>\n                  );\n                })}\n            </List>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={closeDialog} color=\"secondary\">\n            取消\n          </Button>\n          <Button onClick={saveOrderList} color=\"primary\">\n            確認\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CreateOrderPage;\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\n// react-window\nimport { FixedSizeList } from 'react-window';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\n// app bar\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosTwoToneIcon from '@material-ui/icons/ArrowBackIosTwoTone';\n\n// list items\nimport Avatar from '@material-ui/core/Avatar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\n// store\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\n\nimport Loader from '../Loader';\nimport SearchBox from '../SearchBox';\n\nconst ProductItemRenderer = ({ data, index, style }) => {\n  const { selectedItems, toggleProduct, productList } = data;\n  const product = productList[index];\n\n  return (\n    <ListItem button style={style} key={index} onClick={toggleProduct(product)}>\n      <ListItemIcon>\n        <Checkbox color=\"primary\" checked={selectedItems.hasOwnProperty(product.id)} />\n      </ListItemIcon>\n      <ListItemAvatar>\n        <Avatar src={product.img} />\n      </ListItemAvatar>\n      <ListItemText primary={product.name} />\n    </ListItem>\n  );\n};\n\nconst ProductPage = () => {\n  const history = useHistory();\n  const action = AppStore.useAction();\n  const product = Firebase.useCollection('product');\n  const productPage = AppStore.useState((s) => s.productPage);\n  const param = useParams();\n  const doc = Firebase.useDocument();\n\n  // check loading\n  const isDataLoading = Firebase.useIsLoading();\n  if (isDataLoading) {\n    return <Loader />;\n  }\n\n  // check client\n  const client = doc(param.clientId);\n  if (!client) {\n    return <Typography variant=\"h4\">不存在此客戶</Typography>;\n  }\n\n  // product list\n  const filteredProductList = product.list.filter((p) => {\n    return p.name.toLowerCase().includes(productPage.searchInput);\n  });\n\n  const gotoCreateOrderPage = () => {\n    history.push(`/clients/${client.id}/order/quantities`);\n  };\n\n  const gotoClientInfoPage = () => {\n    action.product.setSearchInput('');\n    action.product.clearSelectedProducts();\n    history.push(`/clients/${client.id}`);\n  };\n\n  return (\n    <div className=\"panel-container\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            onClick={() => {\n              gotoClientInfoPage();\n            }}\n          >\n            <ArrowBackIosTwoToneIcon />\n          </IconButton>\n          <Typography variant=\"h6\">產品選單</Typography>\n          <SearchBox\n            searchInput={productPage.searchInput}\n            onChange={(e) => action.product.setSearchInput(e.target.value)}\n          />\n          <IconButton\n            color=\"inherit\"\n            onClick={() => {\n              gotoCreateOrderPage();\n            }}\n          >\n            <ShoppingCartIcon />\n          </IconButton>\n\n          <Button onClick={action.product.clearSelectedProducts} color=\"secondary\">\n            清空選項\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"panel-content\">\n        <AutoSizer>\n          {({ height, width }) => (\n            <FixedSizeList\n              itemData={{\n                selectedItems: productPage.selectedItems,\n                toggleProduct: (product) => () => action.product.toggleProduct(product),\n                productList: filteredProductList,\n              }}\n              height={height}\n              width={width}\n              itemSize={50}\n              itemCount={filteredProductList.length}\n            >\n              {ProductItemRenderer}\n            </FixedSizeList>\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductPage;\n","// material-ui\nimport Fab from '@material-ui/core/Fab';\n\n// data-grid\nimport { DataGrid } from '@material-ui/data-grid';\n\n// icon\nimport AddIcon from '@material-ui/icons/Add';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\n\nimport AppNavigation from '../AppNavigation';\nimport Loader from '../Loader';\n\n// prettier-ignore\nconst columns = [\n  { width: 270, field: 'product', headerName: '產品' },\n  { width: 70,  field: 'amount',  headerName: '數量', type: 'number' },\n];\n\nconst InventoryPage = () => {\n  const action = AppStore.useAction();\n  const inventory = Firebase.useCollection('inventory');\n  const doc = Firebase.useDocument();\n\n  // check loading\n  const isDataLoading = Firebase.useIsLoading();\n  if (isDataLoading) {\n    return <Loader />;\n  }\n\n  const rows = inventory.list.map((item) => {\n    const product = doc(item.productId);\n\n    return {\n      id: item.id,\n      product: product.name,\n      amount: item.amount,\n      price: product.price,\n    };\n  });\n\n  return (\n    <>\n      <div className=\"panel-container\">\n        <div className=\"panel-content\">\n          <DataGrid rows={rows} columns={columns} autoHeight pageSize={9} />\n        </div>\n        <AppNavigation />\n      </div>\n      <Fab\n        className=\"add-float-button\"\n        color=\"primary\"\n        onClick={() => action.showAddInventoryDialog(true)}\n      >\n        <AddIcon />\n      </Fab>\n    </>\n  );\n};\n\nexport default InventoryPage;\n","import { forwardRef, useRef, useState } from 'react';\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// icon\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\nimport { requestSubmit } from '../../utils/generalUtils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DefaultFormValues = {\n  productId: '', // required\n  amount: '1', // required (min: 1)\n};\n\nconst AddInventoryDialog = () => {\n  const action = AppStore.useAction();\n  const [isLoading, setIsLoading] = useState(false);\n  const addInventoryDialog = AppStore.useState((state) => state.addInventoryDialog);\n  const product = Firebase.useCollection('product');\n\n  const formRef = useRef(null);\n  const [formValues, setFormValues] = useState(DefaultFormValues);\n\n  const onFieldChange = (e) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n    await Firebase.collection('inventory').add({\n      ...formValues,\n      amount: Number.parseInt(formValues.amount, 10),\n    });\n    setFormValues(DefaultFormValues);\n    setIsLoading(false);\n\n    action.showAddInventoryDialog(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={addInventoryDialog.show}\n      onClose={() => action.showAddInventoryDialog(false)}\n      TransitionComponent={Transition}\n    >\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => action.showAddInventoryDialog(false)} // TODO: dirty check\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flex: 1 }}>\n            新增庫存\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => requestSubmit(formRef.current)}>\n            新增\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <form style={{ padding: '30px 24px' }} ref={formRef} onSubmit={onSubmit}>\n        <Loader open={isLoading} />\n\n        {/* 1. productId */}\n        <FormControl required variant=\"outlined\" style={{ width: '100%' }}>\n          <InputLabel>產品</InputLabel>\n          <Select name=\"productId\" value={formValues.productId} onChange={onFieldChange}>\n            {product.list.map((product) => (\n              <MenuItem key={product.id} value={product.id}>\n                {product.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <br />\n        <br />\n\n        {/* 2. amount */}\n        <TextField\n          required\n          value={formValues.amount}\n          name=\"amount\"\n          label=\"數量\"\n          variant=\"outlined\"\n          type=\"number\"\n          style={{ width: '100%' }}\n          inputProps={{ min: 1 }}\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n        />\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddInventoryDialog;\n","import { useState } from 'react';\n\n// material-ui\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Button from '@material-ui/core/Button';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\n\nconst ClientAccordions = ({ data }) => {\n  const [checked, setChecked] = useState([]);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const clients = Object.entries(data).map(([clientName, clientPurchases]) => {\n    const lists = Object.entries(clientPurchases).map(([purchaseDate, purchases]) => {\n      return (\n        <AccordionDetails key={purchaseDate}>\n          <Typography>{purchaseDate}</Typography>\n          <List>\n            {purchases.map((purchase) => (\n              <ListItem key={purchase.id} button onClick={handleToggle(purchase.id)}>\n                <ListItemIcon>\n                  <Checkbox checked={checked.indexOf(purchase.id) !== -1} />\n                </ListItemIcon>\n                <ListItemText primary={purchase.product} secondary={`* ${purchase.amount}`} />\n              </ListItem>\n            ))}\n          </List>\n        </AccordionDetails>\n      );\n    });\n\n    return (\n      <Accordion key={clientName}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography>{clientName}</Typography>\n        </AccordionSummary>\n        {lists}\n        <AccordionActions>\n          <Button variant=\"contained\" size=\"small\" color=\"primary\">\n            移至下個月\n          </Button>\n        </AccordionActions>\n      </Accordion>\n    );\n  });\n\n  if (clients.length === 0) {\n    return <Typography>本月沒有購買提醒</Typography>;\n  }\n\n  return clients;\n};\n\nexport default ClientAccordions;\n","import { useState } from 'react';\n\n// material-ui\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport Firebase from '../../apis/firebase';\nimport AppNavigation from '../AppNavigation';\nimport Loader from '../Loader';\nimport ClientAccordions from './ClientAccordions';\nimport moment from 'moment';\n\nconst ReminderPage = () => {\n  const purchase = Firebase.useCollection('purchase');\n  const doc = Firebase.useDocument();\n\n  const thisMonth = moment().month() + 1; // moment().month() will give you a Number between 0 - 11\n  const [chosenMonth, setChosenMonth] = useState(thisMonth);\n\n  const thisYear = moment().year();\n  const [chosenYear, setChosenYear] = useState(thisYear);\n\n  // check loading\n  const isDataLoading = Firebase.useIsLoading();\n  if (isDataLoading) {\n    return <Loader />;\n  }\n\n  const dataInChosenMonth = purchase.list\n    .filter((purchase) => {\n      const remindMonths = purchase.remindDates ? purchase.remindDates[chosenYear] : [];\n\n      if (chosenMonth && remindMonths.includes(chosenMonth)) return true;\n      return false;\n    })\n    .map((purchase) => {\n      const client = doc(purchase.clientId);\n      const product = doc(purchase.productId);\n\n      return {\n        id: purchase.id,\n        client: client.firstName,\n        product: product.name,\n        amount: purchase.amount,\n        price: purchase.amount * product.price,\n        date: purchase.purchaseDate,\n        note: purchase.note,\n      };\n    });\n\n  const aggregate = (arr, key) => {\n    return arr.reduce((acc, cur) => {\n      if (!cur[key]) {\n        return acc;\n      }\n\n      if (!acc[cur[key]]) {\n        acc[cur[key]] = [];\n      }\n      acc[cur[key]].push(cur);\n      return acc;\n    }, {});\n  };\n\n  const order = (unordered) => {\n    return Object.keys(unordered)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = unordered[key];\n        return obj;\n      }, {});\n  };\n\n  const accordionData = {};\n\n  const aggregateByClient = order(aggregate(dataInChosenMonth, 'client'));\n  for (const [key, value] of Object.entries(aggregateByClient)) {\n    const aggregateByDate = aggregate(value, 'date');\n    accordionData[key] = order(aggregateByDate);\n  }\n\n  return (\n    <div className=\"panel-container\">\n      <div className=\"panel-content\">\n        <div>本月提醒：</div>\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <FormControl>\n            <InputLabel>月</InputLabel>\n            <Select\n              value={chosenMonth}\n              onChange={(e) => setChosenMonth(Number.parseInt(e.target.value))}\n            >\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => (\n                <MenuItem key={month} value={month}>\n                  {month}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <InputLabel>年</InputLabel>\n            <Select\n              value={chosenYear}\n              onChange={(e) => setChosenYear(Number.parseInt(e.target.value))}\n            >\n              {Array.from({ length: thisYear - 2020 }, (value, key) => (value = key + 2021))\n                .reverse()\n                .map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </div>\n        <br />\n        <ClientAccordions data={accordionData}></ClientAccordions>\n      </div>\n\n      <AppNavigation />\n    </div>\n  );\n};\n\nexport default ReminderPage;\n","import { forwardRef, useRef, useState } from 'react';\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// icon\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport AppStore from '../../store/appStore';\nimport Firebase from '../../apis/firebase';\nimport Loader from '../Loader';\nimport { formatDate, requestSubmit } from '../../utils/generalUtils';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst DefaultFormValues = {\n  clientId: '', // required\n  productId: '', // required\n  amount: '1', // required (min: 1)\n  purchaseDate: formatDate(new Date()), // required\n  note: '',\n};\n\nconst AddPurchaseDialog = () => {\n  const action = AppStore.useAction();\n  const [isLoading, setIsLoading] = useState(false);\n  const addPurchaseDialog = AppStore.useState((state) => state.addPurchaseDialog);\n  const client = Firebase.useCollection('client');\n  const product = Firebase.useCollection('product');\n\n  const formRef = useRef(null);\n  const [formValues, setFormValues] = useState(DefaultFormValues);\n\n  const onFieldChange = (e) => {\n    setFormValues({\n      ...formValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n    await Firebase.collection('purchase').add({\n      ...formValues,\n      amount: Number.parseInt(formValues.amount, 10),\n    });\n    setFormValues(DefaultFormValues);\n    setIsLoading(false);\n\n    action.showAddPurchaseDialog(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={addPurchaseDialog.show}\n      onClose={() => action.showAddPurchaseDialog(false)}\n      TransitionComponent={Transition}\n    >\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={() => action.showAddPurchaseDialog(false)} // TODO: dirty check\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flex: 1 }}>\n            新增購買\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => requestSubmit(formRef.current)}>\n            購買\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <form style={{ padding: '30px 24px' }} ref={formRef} onSubmit={onSubmit}>\n        <Loader open={isLoading} />\n\n        {/* 1. clientId */}\n        <FormControl required variant=\"outlined\" style={{ width: '100%' }}>\n          <InputLabel shrink>購買人</InputLabel>\n          <Select name=\"clientId\" value={formValues.clientId} onChange={onFieldChange}>\n            {client.list.map((client) => (\n              <MenuItem key={client.id} value={client.id}>\n                {client.lastName + client.firstName}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <br />\n        <br />\n\n        {/* 2. productId */}\n        <FormControl required variant=\"outlined\" style={{ width: '100%' }}>\n          <InputLabel shrink>產品</InputLabel>\n          <Select name=\"productId\" value={formValues.productId} onChange={onFieldChange}>\n            {product.list.map((product) => (\n              <MenuItem key={product.id} value={product.id}>\n                {product.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <br />\n        <br />\n\n        {/* 3. amount */}\n        <TextField\n          required\n          name=\"amount\"\n          value={formValues.amount}\n          label=\"數量\"\n          variant=\"outlined\"\n          type=\"number\"\n          inputProps={{ min: 1 }}\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n          style={{ width: '100%' }}\n        />\n        <br />\n        <br />\n\n        {/* 4. purchase date */}\n        <TextField\n          required\n          name=\"purchaseDate\"\n          value={formValues.purchaseDate}\n          label=\"購買日期\"\n          type=\"date\"\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n          style={{ width: '210px' }}\n        />\n        <br />\n        <br />\n\n        {/* 5. note */}\n        <TextField\n          name=\"note\"\n          value={formValues.note}\n          label=\"筆記\"\n          multiline\n          variant=\"outlined\"\n          InputLabelProps={{ shrink: true }}\n          onChange={onFieldChange}\n          style={{ width: '100%' }}\n        />\n      </form>\n    </Dialog>\n  );\n};\n\nexport default AddPurchaseDialog;\n","// material-ui\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport Firebase from '../../apis/firebase';\nimport AppStore from '../../store/appStore';\nimport { formatDate } from '../../utils/generalUtils';\n\nconst SubscriptionStatus = () => {\n  const action = AppStore.useAction();\n  const user = Firebase.useState((state) => state.user);\n  const isSubscribed = user.expirationDate >= formatDate(new Date());\n\n  // Subscribed\n  if (isSubscribed) {\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">\n            訂閱狀態：訂閱中\n          </Typography>\n          <br />\n          訂閱到期日：{user.expirationDate}\n        </CardContent>\n        <CardActions>\n          <Button color=\"primary\">取消訂閱</Button>\n        </CardActions>\n      </Card>\n    );\n  }\n\n  // Unsubscribed\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          訂閱狀態：未訂閱\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          color=\"primary\"\n          onClick={async () => {\n            // TODO: move this function into payment.js\n            const ecpay = Firebase.firebase.functions().httpsCallable('ecpay');\n\n            // TODO: remove unused parameters\n            const result = await ecpay({\n              uid: user.uid,\n              email: user.email,\n              ClientBackURL: window.location.href,\n              OrderResultURL: window.location.href,\n            });\n\n            // forward to ecapy's website\n            document.write(result.data.html_form);\n          }}\n        >\n          訂閱\n        </Button>\n        <Button disabled color=\"primary\" onClick={() => action.showSubscriptionRuleDialog(true)}>\n          訂閱規則\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default SubscriptionStatus;\n","import Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst FAQ = () => {\n  return (\n    <>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Typography variant=\"h6\">常見問題</Typography>\n      </div>\n      <br />\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>如何加入會員？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            按下註冊按鈕，依照流程輸入帳號密碼進行註冊。確認完成後你就是會員了！所有加入的會員都可以免費使用我們VIP服務\n            3 個月。\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>如何成為VIP？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            在會員區，找到訂閱按鈕，進入訂閱流程。訂閱完成當下即開通 VIP 使用。\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>加入VIP有什麼優惠？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>可以使用提醒區功能。</Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>VIP收費方式？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>年訂閱：新台幣 1000元；月訂閱：新台幣 99元。</Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>如何取消訂閱？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>在會員區，按下取消訂閱按鈕，並照流程完成。</Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>如何使用我們的App管理客戶系統？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            在客戶區，新增客戶姓名；在客戶資料頁面按購買按鈕，新增客戶的產品訂單。\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>如何聯絡客服？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>請寄信到客服的 email 信箱。</Typography>\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>忘記密碼怎麼辦？</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>在登入區，按忘記密碼按鈕並完成流程。</Typography>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  );\n};\n\nexport default FAQ;\n","// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Firebase from '../../apis/firebase';\nimport AppNavigation from '../AppNavigation';\nimport { formatDate } from '../../utils/generalUtils';\n\nimport SubscriptionStatus from './SubscriptionStatus';\nimport FAQ from './FAQ';\n\nconst AccountPage = () => {\n  const user = Firebase.useState((state) => state.user);\n  const creationDate = formatDate(new Date(user.creationTime));\n\n  return (\n    <div className=\"panel-container\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">會員資訊與常見問題</Typography>\n          <div style={{ flexGrow: 1 }}></div>\n        </Toolbar>\n      </AppBar>\n      <div className=\"panel-content\">\n        {/* customer information */}\n        <Card>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n              會員資料\n            </Typography>\n            <br />\n            <Typography>電子信箱：{user.email}</Typography>\n            <Typography>\n              建立日期：{creationDate}\n              <br />\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button color=\"primary\">編輯</Button>\n            <Button color=\"primary\" onClick={Firebase.logout}>\n              登出\n            </Button>\n          </CardActions>\n        </Card>\n        <br />\n\n        {/* subscription information */}\n        <SubscriptionStatus />\n        <br />\n        <br />\n\n        {/* FAQ */}\n        <FAQ />\n        <br />\n      </div>\n      <AppNavigation />\n    </div>\n  );\n};\n\nexport default AccountPage;\n","import { forwardRef, useState } from 'react';\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport AppStore from '../../store/appStore';\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst SubscriptionRuleDialog = () => {\n  const showSubscriptionRuleDialog = AppStore.useState(\n    (state) => state.subscriptionRuleDialog.show\n  );\n\n  const action = AppStore.useAction();\n\n  const [isBottomed, setIsBottomed] = useState(false);\n\n  const handleScroll = (event) => {\n    const target = event.target;\n\n    if (target.scrollHeight - target.scrollTop === target.clientHeight) {\n      setIsBottomed(true);\n    }\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={showSubscriptionRuleDialog}\n      onClose={() => action.showSubscriptionRuleDialog(false)}\n      TransitionComponent={Transition}\n    >\n      <AppBar style={{ position: 'relative' }}>\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flex: 1 }}>\n            訂閱規則\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <DialogContent onScroll={handleScroll}>\n        <DialogContentText>第一條：這是第一條的內容</DialogContentText>\n        <DialogContentText>第二條：這是第二條的內容</DialogContentText>\n        <DialogContentText>第三條：這是第三條的內容</DialogContentText>\n        <DialogContentText>第四條：這是第四條的內容</DialogContentText>\n        <DialogContentText>\n          第五條：這是一條很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的很長的內容\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        {/* TODO: https://github.com/zlargon/reminder-app/issues/46 */}\n        <Button\n          disabled={!isBottomed}\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            action.showSubscriptionRuleDialog(false);\n            setIsBottomed(false);\n          }}\n        >\n          我知道了\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default SubscriptionRuleDialog;\n","import './App.scss';\n\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport useInitApp from '../hooks/useInitApp';\n\n// authentication pages\nimport LoginPage from './authentication/LoginPage';\nimport SignupPage from './authentication/SignupPage';\nimport ForgetPasswordPage from './authentication/ForgetPasswordPage';\n\n// client pages\nimport ClientsPage from './clients/ClientsPage';\nimport AddClientDialog from './clients/AddClientDialog';\nimport ClientInfoPage from './clients/ClientInfoPage';\nimport EditClientDialog from './clients/EditClientDialog';\nimport DeleteClientDialog from './clients/DeleteClientDialog';\nimport CreateOrderPage from './clients/CreateOrderPage';\nimport ProductPage from './product/ProductPage';\n\n// inventory page\nimport InventoryPage from './inventory/InventoryPage';\nimport AddInventoryDialog from './inventory/AddInventoryDialog';\n\n// reminder page\nimport ReminderPage from './reminder/ReminderPage';\nimport AddPurchaseDialog from './reminder/AddPurchaseDialog';\n\n// account page\nimport AccountPage from './account/AccountPage';\nimport SubscriptionRuleDialog from './account/SubscriptionRuleDialog';\n\nfunction App() {\n  useInitApp();\n\n  return (\n    <div id=\"reminder-app\">\n      <Switch>\n        <Route exact path=\"/login\">\n          <LoginPage />\n        </Route>\n\n        <Route exact path=\"/signup\">\n          <SignupPage />\n        </Route>\n\n        <Route exact path=\"/forget_password\">\n          <ForgetPasswordPage />\n        </Route>\n\n        <Route exact path=\"/clients\">\n          <ClientsPage />\n          <AddClientDialog />\n        </Route>\n\n        <Route exact path=\"/clients/:clientId\">\n          <ClientInfoPage />\n          <DeleteClientDialog />\n          <EditClientDialog />\n        </Route>\n\n        <Route exact path=\"/clients/:clientId/order/quantities\">\n          <CreateOrderPage />\n        </Route>\n\n        <Route exact path=\"/inventory\">\n          <InventoryPage />\n          <AddInventoryDialog />\n        </Route>\n\n        <Route exact path=\"/reminder\">\n          <ReminderPage />\n          <AddPurchaseDialog />\n        </Route>\n\n        <Route exact path=\"/account\">\n          <AccountPage />\n          <SubscriptionRuleDialog />\n        </Route>\n\n        <Route exact path=\"/clients/:clientId/order/selectProducts\">\n          <ProductPage />\n        </Route>\n\n        <Redirect to=\"/login\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import App from './components/App';\nimport AppStore from './store/appStore';\nimport { BrowserRouter } from 'react-router-dom';\nimport Firebase from './apis/firebase';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/reminder-app\">\n    <Firebase.Provider>\n      <AppStore.Provider>\n        <App />\n      </AppStore.Provider>\n    </Firebase.Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}